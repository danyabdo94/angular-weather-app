var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.085,1,0.518]],["body/components/AppComponent.html",[0,0.162,1,0.964,2,0.582,3,0.475,4,1.292,5,1.292,6,1.292,7,0.376,8,2.818,9,1.292,10,1.92,11,1.662,12,2.881,13,1.583,14,4.324,15,1.583,16,4.324,17,0.925,18,0.698,19,3.528,20,0.582,21,0.057,22,0.698,23,0.475,24,0.196,25,3.454,26,0.963,27,1.583,28,1.583,29,1.583,30,1.785,31,1.292,32,0.582,33,1.292,34,0.698,35,1.292,36,0.698,37,1.292,38,0.963,39,1.583,40,0.698,41,1.292,42,0.698,43,1.292,44,0.963,45,0.713,46,0.698,47,1.292,48,0.824,49,1.292,50,0.698,51,1.292,52,1.292,53,0.045,54,0.045]],["title/modules/AppModule.html",[55,1.28,56,1.487]],["body/modules/AppModule.html",[1,1.021,2,0.463,3,0.378,7,0.299,20,0.882,21,0.058,22,0.556,23,0.503,24,0.156,26,0.767,34,0.948,36,0.948,38,1.021,40,0.948,42,0.948,44,1.021,45,0.617,46,0.948,48,0.873,50,0.948,53,0.039,54,0.039,55,1.825,56,3.026,57,1.594,58,3.356,59,3.356,60,2.384,61,2.244,62,2.244,63,2.244,64,2.244,65,1.519,66,2.986,67,2.244,68,1.872,69,2.809,70,3.739,71,2.986,72,1.872,73,3.739,74,2.809,75,3.739,76,2.244,77,2.491,78,2.809,79,2.809,80,2.809,81,2.121,82,2.244,83,2.809,84,2.809,85,2.809,86,3.739,87,2.244,88,2.244,89,3.739,90,2.809,91,3.739,92,2.809,93,2.809,94,1.872,95,4.202,96,3.739,97,2.809,98,2.809,99,1.872,100,2.809,101,2.809,102,1.872,103,3.739,104,2.809,105,3.739,106,2.809,107,3.739,108,2.809,109,2.809,110,1.872,111,3.739,112,1.594,113,1.594,114,2.809,115,2.809,116,2.809,117,2.809,118,2.809,119,2.809,120,2.809,121,2.809,122,4.202,123,2.809,124,2.809]],["title/components/CityComponent.html",[0,0.085,34,0.518]],["body/components/CityComponent.html",[0,0.141,1,0.46,2,0.383,3,0.313,4,0.851,5,0.851,6,0.851,7,0.247,9,0.851,10,1.769,11,1.531,13,1.202,15,1.202,17,0.649,18,0.956,20,0.767,21,0.058,22,0.46,23,0.313,24,0.129,26,0.635,27,1.202,28,1.202,29,1.202,30,1.514,31,0.851,32,0.512,33,0.851,34,0.818,35,0.851,36,0.46,37,1.393,38,0.635,39,1.202,40,0.46,41,0.851,42,0.46,43,1.597,44,1.191,45,0.682,46,0.46,47,0.851,48,0.543,49,0.851,50,0.46,51,0.851,52,0.851,53,0.034,54,0.034,60,1.862,65,1.531,81,1.862,112,1.319,113,1.319,125,1.857,126,1.387,127,1.608,128,3.04,129,3.283,130,3.283,131,0.383,132,1.202,133,1.474,134,1.474,135,2.755,136,3.303,137,3.303,138,2.346,139,1.04,140,3.303,141,1.747,142,2.324,143,4.135,144,2.272,145,3.04,146,3.303,147,3.283,148,0.851,149,0.767,150,0.851,151,3.283,152,2.324,153,1.04,154,1.393,155,2.324,156,1.913,157,1.337,158,2.324,159,2.324,160,1.657,161,2.187,162,2.187,163,3.04,164,2.187,165,2.536,166,2.622,167,3.04,168,2.622,169,2.324,170,3.303,171,2.324,172,1.31,173,2.324,174,1.549,175,2.622,176,1.549,177,1.549,178,1.857,179,1.319,180,1.857,181,1.206,182,2.019,183,1.857,184,2.324,185,1.857,186,2.324,187,1.549,188,2.324,189,0.982,190,3.04,191,2.324,192,1.857,193,1.857,194,2.324,195,3.283,196,1.603,197,3.283,198,1.603,199,2.622,200,3.283,201,3.616,202,3.616,203,3.283,204,1.603,205,3.283,206,1.862,207,3.283,208,3.283,209,3.283]],["title/components/CityDashboardWidgetComponent.html",[0,0.085,36,0.518]],["body/components/CityDashboardWidgetComponent.html",[0,0.153,1,0.575,2,0.479,3,0.391,4,1.064,5,1.064,6,1.064,7,0.309,9,1.064,10,1.855,11,1.605,13,1.4,15,1.4,17,0.575,18,0.957,20,0.63,21,0.057,22,0.575,23,0.391,24,0.161,26,0.793,27,1.4,28,1.4,29,1.4,30,1.662,31,1.064,32,0.682,33,1.064,34,0.575,35,1.064,36,0.898,37,1.834,38,1.461,39,1.4,40,0.575,41,1.064,42,0.575,43,1.064,44,0.793,45,0.63,46,0.575,47,1.064,48,0.679,49,1.064,50,0.575,51,1.564,52,1.064,53,0.04,54,0.04,102,3.288,126,1.615,127,1.805,131,0.479,139,1.211,141,1.918,148,1.4,149,0.749,150,1.4,153,1.211,154,1.4,174,1.936,181,1.534,210,3.942,211,1.648,212,2.547,213,2.547,214,3.823,215,2.747,216,3.413,217,1.805,218,2.906,219,4.841,220,3.823,221,2.906,222,2.906,223,3.823,224,2.906,225,3.823,226,2.321,227,2.321,228,2.906,229,2.906,230,3.054]],["title/classes/Climate.html",[24,0.146,160,0.96]],["body/classes/Climate.html",[2,0.331,3,0.27,7,0.214,17,0.693,18,0.764,20,0.331,21,0.056,23,0.52,24,0.195,32,0.398,45,0.71,53,0.031,54,0.031,131,0.487,132,1.081,133,0.636,134,0.636,148,0.735,149,0.829,150,1.63,157,1.124,160,1.081,162,3.24,172,0.636,181,1.728,196,2.103,204,1.442,206,1.139,217,0.848,231,1.139,232,3.84,233,2.869,234,2.744,235,2.007,236,2.007,237,2.799,238,2.007,239,2.007,240,2.007,241,2.359,242,1.442,243,2.574,244,3.594,245,3.386,246,1.968,247,3.349,248,2.574,249,1.968,250,3.159,251,3.24,252,3.483,253,3.159,254,3.159,255,2.869,256,3.159,257,3.159,258,1.968,259,1.968,260,1.968,261,1.968,262,2.574,263,1.968,264,1.968,265,1.968,266,3.159,267,3.044,268,2.869,269,2.574,270,2.574,271,2.574,272,1.337,273,1.337,274,1.337,275,1.337,276,1.337,277,0.848,278,3.368,279,1.442,280,1.337,281,1.337,282,1.968,283,1.337,284,1.337,285,1.968,286,1.675,287,1.968,288,1.968,289,1.968,290,1.968,291,1.968,292,1.968,293,1.675,294,1.968,295,1.968,296,1.968,297,1.442,298,1.337,299,1.337,300,1.337,301,1.337,302,1.337,303,1.337,304,1.337,305,1.139,306,1.337,307,1.139,308,1.337,309,1.337,310,1.337,311,1.337,312,1.139,313,1.337,314,1.337,315,1.337,316,1.337,317,1.337,318,1.337,319,1.337,320,1.337,321,1.337,322,1.337,323,1.337,324,1.337,325,1.337,326,1.337,327,1.337,328,1.337,329,1.337,330,1.337,331,1.337,332,1.337,333,1.337,334,1.337,335,1.337,336,1.337,337,1.337]],["title/components/CountryComponent.html",[0,0.085,40,0.518]],["body/components/CountryComponent.html",[0,0.139,1,0.438,2,0.365,3,0.298,4,0.811,5,0.811,6,0.811,7,0.236,9,0.811,10,1.749,11,1.514,13,1.161,15,1.161,17,0.627,18,0.989,20,0.757,21,0.058,22,0.438,23,0.298,24,0.123,26,0.605,27,1.161,28,1.161,29,1.161,30,1.481,31,0.811,32,0.545,33,0.811,34,0.438,35,0.811,36,0.438,37,0.811,38,0.605,39,1.161,40,0.8,41,0.811,42,0.438,43,0.811,44,0.605,45,0.667,46,0.438,47,0.811,48,0.517,49,0.811,50,0.438,51,0.811,52,0.811,53,0.033,54,0.033,60,1.799,65,1.514,81,1.799,112,1.256,113,1.256,126,1.34,127,1.566,128,2.96,131,0.365,132,1.161,133,1.454,134,1.454,135,2.696,136,3.232,138,2.295,139,1.005,140,3.232,141,1.709,144,2.175,145,2.96,146,3.232,148,0.811,149,0.809,150,0.811,153,1.174,154,1.481,156,2.018,157,1.304,160,1.481,162,2.696,163,2.96,164,3.127,165,2.469,166,2.534,167,2.96,168,2.534,172,1.282,175,2.534,176,1.476,177,1.476,178,1.769,179,1.256,180,1.769,181,1.454,182,1.809,183,1.769,185,1.769,187,2.113,189,0.936,190,2.534,192,1.769,193,1.769,198,1.081,216,1.769,217,0.936,338,1.769,339,2.71,340,3.172,341,3.172,342,3.232,343,3.232,344,4.046,345,4.046,346,2.215,347,2.215,348,2.215,349,2.215,350,2.215,351,2.215,352,2.215,353,2.215,354,2.215,355,2.215,356,2.215,357,2.534,358,2.215,359,2.215,360,2.215,361,2.215,362,2.215,363,2.215,364,2.215,365,1.476,366,2.215,367,2.215,368,2.215,369,2.215,370,2.215,371,2.215,372,2.215,373,2.215,374,2.215,375,2.215,376,2.215,377,3.172,378,2.215,379,2.215,380,2.215,381,3.706,382,1.081,383,3.706,384,2.215,385,2.215,386,2.215,387,3.706,388,1.476,389,2.534,390,3.172,391,2.215,392,2.215,393,2.215,394,1.769,395,2.215,396,2.215,397,2.215,398,3.172,399,3.172]],["title/injectables/HelperService.html",[65,0.831,400,1.107]],["body/injectables/HelperService.html",[2,0.492,3,0.402,7,0.318,12,1.988,17,0.856,18,0.941,20,0.714,21,0.058,22,0.59,23,0.402,24,0.166,32,0.617,53,0.041,54,0.041,65,1.232,131,0.756,133,1.371,134,1.371,135,2.884,137,2.384,138,2.602,139,1.232,148,1.679,149,0.492,150,1.679,153,1.507,154,1.585,157,1.182,160,1.679,172,0.945,181,0.945,189,1.643,198,1.457,242,1.899,277,1.261,297,1.899,339,1.693,342,3.457,343,3.663,382,2.239,400,1.828,401,2.384,402,3.89,403,3.89,404,3.89,405,3.89,406,2.984,407,3.89,408,2.984,409,3.89,410,2.984,411,3.89,412,2.984,413,3.89,414,2.984,415,2.984,416,1.988,417,2.984,418,2.384,419,4.967,420,4.328,421,2.984,422,3.89,423,2.984,424,3.89,425,2.984,426,2.984,427,2.984,428,2.984,429,2.984,430,2.984,431,2.984,432,2.984,433,3.89,434,2.984,435,2.984,436,2.984,437,2.984,438,2.984]],["title/components/MinMaxWeatherWidgetComponent.html",[0,0.085,42,0.518]],["body/components/MinMaxWeatherWidgetComponent.html",[0,0.128,1,0.361,2,0.301,3,0.245,4,0.668,5,0.668,6,0.668,7,0.194,9,0.668,10,1.664,11,1.44,13,1.007,15,1.007,17,0.654,18,0.985,20,0.732,21,0.058,22,0.361,23,0.245,24,0.101,26,0.498,27,1.007,28,1.007,29,1.007,30,1.349,31,0.668,32,0.37,33,0.668,34,0.361,35,0.668,36,0.361,37,1.212,38,0.498,39,1.007,40,0.361,41,0.668,42,0.729,43,1.664,44,1.458,45,0.88,46,0.361,47,0.668,48,1.061,49,0.668,50,0.361,51,1.212,52,0.668,53,0.029,54,0.029,110,3.339,126,1.161,127,1.398,131,0.301,132,1.007,139,0.871,141,1.557,149,0.711,153,1.49,154,1.579,156,1.398,157,1.212,165,1.215,170,3.158,181,0.871,182,2.219,189,1.557,196,0.89,198,0.89,201,2.644,202,2.943,211,1.034,212,1.832,213,1.832,215,2.09,226,1.457,242,0.89,277,0.77,279,2.029,297,0.89,365,2.634,382,0.89,439,4.003,440,2.749,441,2.749,442,3.685,443,2.943,444,2.943,445,2.455,446,3.32,447,2.943,448,3.158,449,3.158,450,3.685,451,2.943,452,3.685,453,3.685,454,2.749,455,1.823,456,1.823,457,1.823,458,1.823,459,1.457,460,1.457,461,1.823,462,1.56,463,2.196,464,2.959,465,2.196,466,2.196,467,2.196,468,1.823,469,1.823,470,2.749,471,2.749,472,1.823,473,1.823,474,1.823,475,1.823,476,1.823,477,1.823,478,1.457,479,1.457,480,2.196,481,1.823,482,1.823,483,1.457,484,1.457,485,1.457,486,1.457,487,1.457,488,3.158,489,1.823,490,1.823,491,1.823,492,1.823,493,1.823,494,1.823,495,1.823,496,1.823,497,1.823,498,1.457,499,1.823,500,1.457,501,1.823,502,2.196,503,1.457,504,2.196,505,1.823,506,1.823,507,1.823,508,2.196,509,1.457,510,1.457,511,1.457,512,1.457,513,1.457,514,1.457,515,1.034,516,1.823,517,1.823,518,1.457,519,1.457,520,1.823,521,1.457,522,1.823,523,1.457,524,1.823,525,1.823,526,3.63,527,1.823,528,1.823,529,3.685,530,1.823,531,2.749,532,1.823,533,1.823,534,1.823,535,1.823,536,2.749,537,2.943,538,2.644,539,1.457,540,1.457,541,1.457,542,1.457,543,1.457,544,1.215,545,1.457,546,2.196,547,1.823,548,1.823,549,1.823,550,1.823,551,1.823,552,1.823,553,1.823,554,1.823,555,1.457,556,1.823,557,1.823,558,1.823,559,1.823,560,1.823,561,2.749,562,1.823,563,1.823,564,1.823,565,1.457,566,1.823,567,1.823,568,1.823,569,1.823,570,1.823,571,1.823]],["title/components/VisualizeD3WeatherComponent.html",[0,0.085,46,0.518]],["body/components/VisualizeD3WeatherComponent.html",[0,0.136,1,0.42,2,0.35,3,0.286,4,0.777,5,0.777,6,0.777,7,0.226,9,0.777,10,1.731,11,1.498,13,1.126,15,1.126,17,0.716,18,0.989,20,0.747,21,0.057,22,0.42,23,0.286,24,0.118,26,0.58,27,1.126,28,1.126,29,1.126,30,1.453,31,0.777,32,0.414,33,0.777,34,0.42,35,0.777,36,0.42,37,0.777,38,0.58,39,1.126,40,0.42,41,0.777,42,0.42,43,0.777,44,0.58,45,0.654,46,0.785,47,1.659,48,1.257,49,0.777,50,0.42,51,0.777,52,0.777,53,0.032,54,0.032,99,3.357,126,1.3,127,1.529,131,0.35,132,1.126,138,2.053,139,0.975,141,1.676,149,0.765,153,1.334,154,1.542,156,0.897,157,0.58,172,1.146,179,1.204,182,2.599,199,1.696,215,2.251,277,0.897,279,2.144,312,1.746,365,2.806,443,3.17,444,3.17,445,2.644,446,2.458,447,3.17,448,3.365,449,3.365,451,3.17,462,1.746,463,2.458,464,2.644,465,2.458,466,2.458,467,2.458,478,1.696,479,1.696,480,1.696,483,1.696,484,1.696,485,1.696,486,1.696,487,1.696,488,3.619,498,1.696,500,1.696,502,2.458,504,2.458,508,1.696,509,1.696,510,2.458,511,1.696,512,1.696,513,1.696,514,1.696,515,1.204,518,2.458,519,3.17,521,1.696,523,1.696,526,2.458,537,3.365,538,3.17,539,1.696,540,1.696,541,1.696,542,2.458,543,1.696,544,1.415,545,2.458,546,1.696,555,1.696,565,1.696,572,4.024,573,1.696,574,3.077,575,3.077,576,3.968,577,3.968,578,3.968,579,3.077,580,2.123,581,2.123,582,2.123,583,2.123,584,2.123,585,2.123,586,2.123,587,3.077,588,2.458,589,2.123,590,2.123,591,2.123,592,2.123,593,2.123,594,2.123,595,2.123,596,2.123,597,2.123,598,2.123,599,2.123,600,2.123,601,2.123,602,2.123,603,2.123,604,2.123,605,2.123,606,3.077,607,2.123,608,2.123,609,1.696,610,2.123,611,2.123,612,3.077,613,3.077,614,1.696,615,2.123,616,2.123,617,1.696,618,2.123,619,2.123,620,2.123,621,2.123,622,2.123,623,2.458]],["title/classes/WeatherInterface.html",[24,0.146,172,0.831]],["body/classes/WeatherInterface.html",[2,0.34,3,0.278,7,0.22,17,0.704,18,0.704,20,0.34,21,0.057,23,0.527,24,0.198,32,0.406,45,0.34,53,0.032,54,0.032,131,0.497,132,1.103,133,0.654,134,0.654,148,0.756,149,0.587,150,1.525,157,1.303,160,0.756,172,0.955,181,1.73,196,2.33,204,1.472,206,1.171,217,0.872,231,1.171,232,3.751,233,1.375,234,1.375,237,2.407,241,2.407,242,1.472,243,2.609,244,3.599,245,3.399,246,2.008,247,3.363,248,2.609,249,2.008,250,3.179,251,3.258,252,3.492,253,3.179,254,3.179,255,2.897,256,3.179,257,3.179,258,2.008,259,2.008,260,2.008,261,2.008,262,2.609,263,2.008,264,2.008,265,2.008,266,3.179,267,3.067,268,2.897,269,2.609,270,2.609,271,2.609,272,1.375,273,1.375,274,1.375,275,1.375,276,1.375,277,0.872,278,3.382,279,2.33,280,1.375,281,1.375,282,2.008,283,1.375,284,1.375,285,2.008,286,1.71,287,2.008,288,2.008,289,2.008,290,2.008,291,2.008,292,2.008,293,1.71,294,2.008,295,2.008,296,2.008,297,1.472,298,1.375,299,1.375,300,1.375,301,1.375,302,1.375,303,1.375,304,1.375,305,1.171,306,1.375,307,1.171,308,1.375,309,1.375,310,1.375,311,1.375,312,1.171,313,1.375,314,1.375,315,1.375,316,1.375,317,1.375,318,1.375,319,1.375,320,1.375,321,1.375,322,1.375,323,1.375,324,1.375,325,1.375,326,1.375,327,1.375,328,1.375,329,1.375,330,1.375,331,1.375,332,1.375,333,1.375,334,1.375,335,1.375,336,1.375,337,1.375,624,2.064,625,2.064,626,2.064,627,2.064]],["title/injectables/WeatherService.html",[144,1.28,400,1.107]],["body/injectables/WeatherService.html",[2,0.548,3,0.448,7,0.354,12,2.216,17,0.658,18,0.972,20,0.811,21,0.058,22,0.658,23,0.448,24,0.185,32,0.643,53,0.044,54,0.044,65,1.613,76,2.657,131,0.548,139,1.321,144,2.036,148,1.748,149,0.548,150,1.748,153,1.645,182,1.624,189,1.405,227,2.657,242,1.624,394,3.33,400,1.924,416,2.216,418,2.657,462,1.887,628,2.657,629,4.169,630,4.775,631,4.169,632,4.169,633,3.326,634,5.018,635,3.326,636,4.169,637,3.326,638,3.326,639,4.169,640,3.326,641,3.326,642,4.169,643,3.326,644,3.326,645,2.216,646,2.657,647,3.33,648,3.326,649,3.326,650,3.326,651,3.326,652,3.326,653,3.326]],["title/components/WeatherWidgetComponent.html",[0,0.085,50,0.518]],["body/components/WeatherWidgetComponent.html",[0,0.149,1,0.533,2,0.445,3,0.363,4,0.987,5,0.987,6,0.987,7,0.287,9,0.987,10,1.827,11,1.581,13,1.332,15,1.332,17,0.814,18,1.014,20,0.6,21,0.057,22,0.533,23,0.363,24,0.15,26,0.736,27,1.332,28,1.332,29,1.332,30,1.613,31,0.987,32,0.49,33,0.987,34,0.533,35,0.987,36,0.533,37,0.987,38,0.736,39,1.332,40,0.533,41,0.987,42,0.533,43,0.987,44,0.736,45,0.812,46,0.533,47,0.987,48,0.63,49,0.987,50,0.871,51,1.507,52,0.987,53,0.038,54,0.038,94,3.438,126,1.536,127,1.739,131,0.445,132,1.332,133,1.535,134,1.535,139,1.152,141,1.861,149,0.799,153,0.854,154,0.987,156,1.861,157,1.203,164,2.423,179,1.53,181,1.152,204,2.365,211,1.53,212,2.423,213,2.423,215,2.862,217,1.739,230,2.905,279,2.463,286,2.609,293,2.748,305,2.335,307,2.335,459,2.905,460,2.154,654,4.122,655,4.405,656,4.116,657,3.637,658,2.696,659,2.696,660,2.696,661,2.696,662,2.696,663,2.696,664,2.696,665,2.696,666,2.696,667,2.905,668,2.696,669,2.154,670,3.637,671,3.637]],["title/coverage.html",[672,2.85]],["body/coverage.html",[0,0.165,1,0.668,7,0.359,8,2.697,21,0.057,24,0.234,34,0.668,36,0.668,38,1.149,40,0.668,42,0.668,44,1.149,45,0.694,46,0.668,48,0.983,50,0.668,53,0.044,54,0.044,65,1.07,77,2.25,94,2.25,99,2.25,102,2.25,110,2.25,125,2.697,133,1.07,134,1.07,144,1.649,149,0.557,160,1.236,161,2.25,172,1.07,210,2.697,211,2.601,231,2.723,338,2.697,339,1.916,400,1.778,401,2.697,439,2.697,515,3.058,572,2.697,573,2.697,628,2.697,645,2.25,654,2.697,672,2.697,673,3.377,674,3.377,675,3.377,676,3.377,677,2.697,678,3.404,679,5.108,680,3.377,681,3.377,682,3.377,683,3.377,684,3.377,685,3.377,686,3.377,687,3.377,688,4.209,689,2.697,690,2.697,691,2.697,692,2.697,693,3.362,694,2.697,695,3.377,696,3.377]],["title/dependencies.html",[57,1.787,697,2.194]],["body/dependencies.html",[21,0.057,22,0.741,48,0.876,53,0.047,54,0.047,57,2.127,71,3.584,72,2.99,81,2.724,82,2.995,87,2.995,88,2.995,112,2.127,113,2.127,174,2.498,176,2.498,177,2.498,416,2.498,698,3.749,699,3.749,700,3.749,701,4.487,702,3.749,703,5.264,704,3.749,705,3.749,706,3.749,707,3.749,708,3.749,709,3.749,710,3.749,711,3.749,712,3.749,713,3.749,714,3.749,715,3.749,716,3.749,717,3.749,718,3.749,719,3.749,720,3.749]],["title/index.html",[131,0.362,614,1.752,721,2.194]],["body/index.html",[0,0.153,3,0.486,7,0.384,11,1.143,21,0.046,25,2.882,32,0.486,53,0.046,54,0.046,68,2.404,161,2.404,389,2.882,617,3.924,623,2.882,646,4.021,722,4.385,723,4.913,724,4.723,725,4.723,726,3.608,727,3.608,728,3.608,729,4.385,730,5.18,731,5.18,732,3.608,733,3.608,734,3.608,735,3.608,736,3.608,737,3.608,738,3.608,739,3.608,740,4.723,741,3.608,742,5.034,743,3.608,744,3.608,745,3.608,746,3.608,747,3.608,748,3.608,749,2.882,750,4.385,751,4.385,752,4.385,753,3.608,754,3.608,755,3.608,756,3.608,757,4.723,758,3.608,759,3.608,760,3.608]],["title/modules.html",[55,1.742]],["body/modules.html",[21,0.05,53,0.05,54,0.05,55,2.05,56,2.382,72,2.798,445,2.798,761,4.199,762,4.199]],["title/overview.html",[763,2.85]],["body/overview.html",[0,0.119,1,1.029,21,0.056,23,0.495,24,0.205,26,1.005,34,0.942,36,0.942,40,0.942,42,0.942,46,0.942,50,0.942,53,0.047,54,0.047,55,2.167,56,3.085,57,2.088,58,2.94,59,2.94,60,2.088,61,2.94,62,2.94,63,2.94,64,2.94,65,1.509,66,3.545,67,2.94,68,2.452,382,1.797,388,2.957,400,1.555,763,2.94,764,2.94]],["title/miscellaneous/variables.html",[678,2.099,765,1.752]],["body/miscellaneous/variables.html",[21,0.057,32,0.57,45,0.191,53,0.02,54,0.02,77,1.634,131,0.711,133,0.777,134,0.777,149,0.623,156,1.525,157,1.322,187,0.77,189,0.488,196,2.067,198,0.564,204,1.912,206,0.655,217,0.488,231,0.655,233,0.77,234,0.77,243,2.405,244,3.457,245,3.068,246,1.276,247,3.002,248,1.9,249,1.276,250,2.69,251,2.82,252,3.243,253,2.69,254,2.69,255,2.271,256,2.69,257,2.69,258,1.276,259,1.276,260,1.276,261,1.276,262,1.9,263,1.276,264,1.276,265,1.276,266,2.69,267,2.516,268,2.271,269,1.9,270,1.9,271,1.9,272,2.405,273,0.77,274,0.77,275,1.276,276,0.77,277,1.036,278,3.037,280,0.77,281,0.77,282,2.61,283,0.77,284,0.77,285,2.61,286,2.222,287,2.61,288,2.61,289,2.61,290,2.61,291,2.61,292,2.61,293,2.222,294,2.61,295,2.61,296,2.61,297,0.564,298,0.77,299,0.77,300,0.77,301,0.77,302,0.77,303,0.77,304,0.77,305,0.655,306,0.77,307,0.655,308,0.77,309,0.77,310,0.77,311,0.77,312,0.655,313,2.516,314,2.516,315,2.516,316,2.516,317,2.516,318,2.516,319,2.516,320,2.516,321,2.516,322,2.516,323,2.516,324,2.516,325,2.516,326,2.516,327,2.516,328,2.516,329,2.516,330,2.516,331,2.516,332,2.516,333,2.82,334,2.82,335,2.82,336,2.82,337,2.82,339,1.391,357,0.923,382,0.564,388,0.77,462,2.291,464,2.405,503,0.923,515,3.004,544,1.634,588,1.959,609,3.381,645,1.634,647,0.923,667,0.923,669,1.529,677,0.923,678,0.77,689,0.923,690,1.529,691,0.923,692,0.923,693,2.722,694,0.923,749,1.529,764,2.525,765,0.923,766,1.915,767,1.155,768,1.155,769,1.155,770,1.155,771,1.155,772,1.155,773,1.155,774,1.155,775,1.155,776,1.155,777,1.155,778,1.155,779,1.155,780,1.155,781,1.155,782,1.155,783,1.155,784,1.155,785,1.155,786,1.155,787,1.155,788,1.155,789,1.155,790,1.155,791,1.915,792,1.155,793,1.155,794,1.155,795,1.915,796,1.155,797,1.155,798,1.155,799,1.155,800,1.155,801,1.155,802,1.155,803,1.155,804,1.155,805,1.915,806,1.155,807,1.155,808,1.155,809,1.155,810,1.155,811,1.155,812,1.155,813,1.155,814,1.155,815,2.452,816,3.161,817,1.915,818,4.038,819,1.915,820,1.155,821,3.917,822,3.408,823,3.408,824,2.452,825,2.452,826,4.038,827,1.155,828,2.452,829,3.161,830,3.161,831,1.155,832,1.155,833,1.155,834,1.155,835,1.155,836,1.915,837,1.155,838,1.155,839,2.852,840,4.313,841,4.142,842,2.452,843,1.915,844,1.155,845,1.155,846,1.155,847,2.852,848,1.915,849,2.452,850,3.161,851,1.155,852,1.155,853,3.161,854,1.155,855,2.852,856,1.155,857,1.155,858,1.155,859,3.161,860,2.852,861,1.155,862,1.155,863,1.155,864,2.852,865,1.915,866,2.452,867,1.155,868,1.915,869,1.915,870,1.155,871,1.155,872,2.852,873,1.155,874,1.915,875,1.915,876,2.852,877,1.155,878,2.452,879,1.155,880,1.155,881,1.915,882,1.155,883,1.155,884,2.452,885,1.915,886,1.155,887,1.155,888,1.155,889,1.155,890,1.155,891,1.155,892,1.155,893,1.155,894,1.155,895,1.155,896,1.155,897,1.155,898,1.155,899,1.155,900,1.155,901,1.155,902,1.155,903,1.155,904,1.155,905,1.155,906,1.155,907,1.155,908,1.155,909,1.155,910,1.155,911,1.155,912,1.155,913,1.155,914,1.155,915,1.155,916,1.155,917,1.155,918,1.155,919,1.155,920,1.155,921,1.155,922,1.155,923,1.155,924,1.155,925,1.155,926,1.155,927,1.155,928,1.155,929,1.155,930,1.155,931,1.155,932,2.852,933,1.155,934,1.155,935,1.155,936,1.155,937,1.155,938,1.155,939,1.155,940,1.155,941,1.155,942,1.155,943,1.155,944,1.155,945,1.155,946,1.155,947,1.155,948,1.155,949,1.155,950,1.155,951,1.155,952,1.155,953,1.155,954,1.155,955,1.155,956,1.155,957,1.155,958,1.155,959,1.155,960,1.155,961,1.155,962,1.155,963,1.155,964,1.155,965,1.155]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":515,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.00",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.02",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.07",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.10",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.11",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.12",{"_index":921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.18",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.21",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.35em",{"_index":566,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["0.40",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.6em",{"_index":611,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["0.71em",{"_index":547,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["0.8.26",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":549,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["03:30",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["05:13",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["06:05",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07:34",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08:34",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":382,"title":{},"body":{"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":429,"title":{},"body":{"injectables/HelperService.html":{}}}],["1020",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1021",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1022",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["103.3",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["106.0",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107.2",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107.6",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":568,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["11",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.4",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["113",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12:44",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.3",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.6",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1500",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.3",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["180",{"_index":608,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["1800",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":388,"title":{},"body":{"components/CountryComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":464,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["20.3",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":595,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["2018",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2100",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["220",{"_index":594,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["23",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.2",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.4",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["239",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.5",{"_index":922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":609,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["25.3",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.1",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26.5",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.3",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.2",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28.8",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.7",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":198,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["3.0.1",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":587,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["30.02",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.8",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300",{"_index":503,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["31.20",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.7",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.2",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.4",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.6",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":505,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["41.1",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41.8",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["44",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4px",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["5",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.7.0",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":588,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["51",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.5",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["53",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["55.9",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.5",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":277,"title":{},"body":{"classes/Climate.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["6.1.10",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":727,"title":{},"body":{"index.html":{}}}],["600",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["61.5",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.9",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["68.5",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":764,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0.1",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["71",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73.8",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.1",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76.1",{"_index":923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.5",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["78",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.0",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.7",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.7",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.1",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82.8",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["83.8",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.5",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.4",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8em",{"_index":616,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["9",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90",{"_index":544,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["900",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.5",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.4",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.3",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.concat(b",{"_index":496,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["absmaxtemp",{"_index":335,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["absmaxtemp_f",{"_index":336,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["activ",{"_index":151,"title":{},"body":{"components/CityComponent.html":{}}}],["activatedrout",{"_index":143,"title":{},"body":{"components/CityComponent.html":{}}}],["actual_compon",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["al",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert(\"pleas",{"_index":383,"title":{},"body":{"components/CountryComponent.html":{}}}],["alexandria",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alt",{"_index":274,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["anattribut",{"_index":420,"title":{},"body":{"injectables/HelperService.html":{}}}],["anchor",{"_index":613,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["angular",{"_index":724,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divid",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/t",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":174,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"dependencies.html":{}}}],["animationtyp",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"index.html":{}}}],["app.compon",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["append(\"g",{"_index":601,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["append(\"text",{"_index":542,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["appmodul",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["april",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":486,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["artifact",{"_index":743,"title":{},"body":{"index.html":{}}}],["assets/countri",{"_index":361,"title":{},"body":{"components/CountryComponent.html":{}}}],["astronomi",{"_index":298,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["aswan",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asyncweatherdata.data",{"_index":191,"title":{},"body":{"components/CityComponent.html":{}}}],["asyut",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attr(\"class",{"_index":537,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["attr(\"d",{"_index":555,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["attr(\"di",{"_index":546,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["attr(\"dx",{"_index":610,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["attr(\"fil",{"_index":548,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["attr(\"i",{"_index":545,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["attr(\"transform",{"_index":538,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["attr(\"x",{"_index":565,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["august",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":176,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"dependencies.html":{}}}],["automat",{"_index":736,"title":{},"body":{"index.html":{}}}],["autounsubscrib",{"_index":175,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["avgdailyrainfal",{"_index":337,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["avgmintemp",{"_index":333,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["avgmintemp_f",{"_index":334,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["axi",{"_index":488,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["b",{"_index":495,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["backdropbackgroundcolour",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["backdropborderradiu",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["behaviorsubject",{"_index":415,"title":{},"body":{"injectables/HelperService.html":{}}}],["beheira",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beni",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beta.18",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["blizzard",{"_index":265,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["blow",{"_index":263,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":657,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["bootstrap",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bottom",{"_index":466,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["break",{"_index":387,"title":{},"body":{"components/CountryComponent.html":{}}}],["brows",{"_index":762,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":742,"title":{},"body":{"index.html":{}}}],["c",{"_index":202,"title":{},"body":{"components/CityComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{}}}],["c.id",{"_index":535,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["cairo",{"_index":357,"title":{},"body":{"components/CountryComponent.html":{},"miscellaneous/variables.html":{}}}],["call(d3axis.axisbottom(this.x",{"_index":540,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["call(d3axis.axisleft(this.i",{"_index":541,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["case",{"_index":381,"title":{},"body":{"components/CountryComponent.html":{}}}],["chanceoffog",{"_index":330,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceoffrost",{"_index":328,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceofhightemp",{"_index":329,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceofovercast",{"_index":326,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceofrain",{"_index":323,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceofremdri",{"_index":324,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceofsnow",{"_index":331,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceofsunshin",{"_index":327,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceofthund",{"_index":332,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chanceofwindi",{"_index":325,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["chang",{"_index":623,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{},"index.html":{}}}],["chart",{"_index":471,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["check",{"_index":389,"title":{},"body":{"components/CountryComponent.html":{},"index.html":{}}}],["chromat",{"_index":482,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["citi",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["citiesweath",{"_index":342,"title":{},"body":{"components/CountryComponent.html":{},"injectables/HelperService.html":{}}}],["city'},{'nam",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["city.append(\"path",{"_index":554,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["city.append(\"text",{"_index":559,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["city.component.css",{"_index":129,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.html",{"_index":130,"title":{},"body":{"components/CityComponent.html":{}}}],["citycompon",{"_index":34,"title":{"components/CityComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["citydashboardwidgetcompon",{"_index":36,"title":{"components/CityDashboardWidgetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["citynam",{"_index":225,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["class",{"_index":24,"title":{"classes/Climate.html":{},"classes/WeatherInterface.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":272,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["cli",{"_index":725,"title":{},"body":{"index.html":{}}}],["clientdata",{"_index":397,"title":{},"body":{"components/CountryComponent.html":{}}}],["climat",{"_index":160,"title":{"classes/Climate.html":{}},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"classes/WeatherInterface.html":{},"coverage.html":{}}}],["climateaverag",{"_index":233,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["climatecondit",{"_index":343,"title":{},"body":{"components/CountryComponent.html":{},"injectables/HelperService.html":{}}}],["climatedaycondit",{"_index":133,"title":{},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["climatenightcondit",{"_index":134,"title":{},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cloudcov",{"_index":294,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["cloudi",{"_index":247,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":738,"title":{},"body":{"index.html":{}}}],["cold",{"_index":259,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["components/c",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["components/city/city.compon",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["components/country/country.compon",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["components/min",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["components/visu",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["components/weath",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["condit",{"_index":216,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{}}}],["connect",{"_index":390,"title":{},"body":{"components/CountryComponent.html":{}}}],["const",{"_index":242,"title":{},"body":{"classes/Climate.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{}}}],["constructor(act",{"_index":142,"title":{},"body":{"components/CityComponent.html":{}}}],["constructor(current_condit",{"_index":235,"title":{},"body":{"classes/Climate.html":{}}}],["constructor(httpcli",{"_index":633,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(priv",{"_index":227,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(rout",{"_index":218,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["constructor(tim",{"_index":624,"title":{},"body":{"classes/WeatherInterface.html":{}}}],["constructor(weatherservic",{"_index":346,"title":{},"body":{"components/CountryComponent.html":{}}}],["core",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["countri",{"_index":339,"title":{},"body":{"components/CountryComponent.html":{},"injectables/HelperService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["countries.foreach(countri",{"_index":437,"title":{},"body":{"injectables/HelperService.html":{}}}],["country'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["country.component.css",{"_index":340,"title":{},"body":{"components/CountryComponent.html":{}}}],["country.component.html",{"_index":341,"title":{},"body":{"components/CountryComponent.html":{}}}],["country.egypt.foreach(c",{"_index":438,"title":{},"body":{"injectables/HelperService.html":{}}}],["countrycompon",{"_index":40,"title":{"components/CountryComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["coverag",{"_index":672,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crescent",{"_index":276,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["current_condit",{"_index":234,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["currentweath",{"_index":135,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{}}}],["currentweather.current_condition[0].localobsdatetim",{"_index":399,"title":{},"body":{"components/CountryComponent.html":{}}}],["currentweather.weather[0].hourly.foreach(hourweath",{"_index":427,"title":{},"body":{"injectables/HelperService.html":{}}}],["curve(d3shape.curvebasi",{"_index":520,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d",{"_index":526,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["d.date))[0",{"_index":493,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d.id",{"_index":561,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d.temperatur",{"_index":531,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d.time",{"_index":603,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["d.valu",{"_index":605,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["d.values[d.values.length",{"_index":562,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d3",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["d3.select(\"#citychart",{"_index":501,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d3.select(\"#lin",{"_index":600,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["d3array",{"_index":485,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["d3array.max(c.valu",{"_index":533,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d3array.max(this.temp",{"_index":532,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d3array.min(c.valu",{"_index":530,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d3array.min(this.temp",{"_index":528,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d3axi",{"_index":487,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["d3scale",{"_index":479,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["d3scale.scalelinear().range([0",{"_index":512,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["d3scale.scalelinear().range([this.height",{"_index":514,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["d3scale.scaleordinal(d3scalechromatic.schemecategory10",{"_index":517,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d3scalechromat",{"_index":481,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["d3shape",{"_index":483,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["d3shape.lin",{"_index":519,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["d3timeformat",{"_index":489,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["dakahlia",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damietta",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dashboard",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{}}}],["data",{"_index":189,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["data(this.temp",{"_index":552,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["data.c",{"_index":186,"title":{},"body":{"components/CityComponent.html":{}}}],["data.t",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data[anattribut",{"_index":421,"title":{},"body":{"injectables/HelperService.html":{}}}],["date",{"_index":297,"title":{},"body":{"classes/Climate.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["datum(funct",{"_index":560,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["datum(this.weatherdata",{"_index":622,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["day",{"_index":245,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["daylight",{"_index":656,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["decemb",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declar",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":156,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{}}}],["depend",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":733,"title":{},"body":{"index.html":{}}}],["develop",{"_index":728,"title":{},"body":{"index.html":{}}}],["dewpointc",{"_index":317,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["dewpointf",{"_index":318,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["direct",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":741,"title":{},"body":{"index.html":{}}}],["directori",{"_index":746,"title":{},"body":{"index.html":{}}}],["dist",{"_index":745,"title":{},"body":{"index.html":{}}}],["document",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["drawaxi",{"_index":451,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["drawlin",{"_index":576,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["drawpath",{"_index":452,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["drizzl",{"_index":257,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["dynam",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":754,"title":{},"body":{"index.html":{}}}],["egypt",{"_index":187,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"miscellaneous/variables.html":{}}}],["el",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["element.absmaxtemp}}°c",{"_index":209,"title":{},"body":{"components/CityComponent.html":{}}}],["element.avgmintemp}}°c",{"_index":208,"title":{},"body":{"components/CityComponent.html":{}}}],["element.humid",{"_index":205,"title":{},"body":{"components/CityComponent.html":{}}}],["element.nam",{"_index":207,"title":{},"body":{"components/CityComponent.html":{}}}],["element.tempc}}°c",{"_index":203,"title":{},"body":{"components/CityComponent.html":{}}}],["element.time/100",{"_index":197,"title":{},"body":{"components/CityComponent.html":{}}}],["element.weatherdesc[0].valu",{"_index":200,"title":{},"body":{"components/CityComponent.html":{}}}],["encapsul",{"_index":440,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["end",{"_index":617,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{},"index.html":{}}}],["enter().append(\"g",{"_index":553,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["environ",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":378,"title":{},"body":{"components/CountryComponent.html":{}}}],["error.cod",{"_index":380,"title":{},"body":{"components/CountryComponent.html":{}}}],["execut",{"_index":751,"title":{},"body":{"index.html":{}}}],["export",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"overview.html":{}}}],["extra",{"_index":167,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["faiyum",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fals",{"_index":667,"title":{},"body":{"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["februari",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feelslikec",{"_index":295,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["feelslikef",{"_index":296,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["ffffff",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"index.html":{}}}],["filteredobject",{"_index":136,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["filteredobject.q",{"_index":195,"title":{},"body":{"components/CityComponent.html":{}}}],["filterobject",{"_index":641,"title":{},"body":{"injectables/WeatherService.html":{}}}],["flag",{"_index":748,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["fog",{"_index":250,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":165,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{}}}],["freez",{"_index":256,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["function",{"_index":529,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["further",{"_index":756,"title":{},"body":{"index.html":{}}}],["g",{"_index":442,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["gade",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gener",{"_index":723,"title":{},"body":{"index.html":{}}}],["geoloc",{"_index":386,"title":{},"body":{"components/CountryComponent.html":{}}}],["geoplugindata",{"_index":344,"title":{},"body":{"components/CountryComponent.html":{}}}],["geoplugindata.geoplugin_c",{"_index":398,"title":{},"body":{"components/CountryComponent.html":{}}}],["get",{"_index":721,"title":{"index.html":{}},"body":{}}],["getasyncdata",{"_index":345,"title":{},"body":{"components/CountryComponent.html":{}}}],["getcityfromip",{"_index":629,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcityfromip(ip",{"_index":636,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getip",{"_index":630,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherinc",{"_index":631,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherincity(filterobject",{"_index":639,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getweatherofc",{"_index":402,"title":{},"body":{"injectables/HelperService.html":{}}}],["getweatherofcities(countri",{"_index":407,"title":{},"body":{"injectables/HelperService.html":{}}}],["gharbia",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gibbou",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["give",{"_index":384,"title":{},"body":{"components/CountryComponent.html":{}}}],["giza",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["go",{"_index":759,"title":{},"body":{"index.html":{}}}],["hail",{"_index":271,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["heatindexc",{"_index":315,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["heatindexf",{"_index":316,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["heavi",{"_index":268,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":443,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["help",{"_index":757,"title":{},"body":{"index.html":{}}}],["helper.servic",{"_index":644,"title":{},"body":{"injectables/WeatherService.html":{}}}],["helperservic",{"_index":65,"title":{"injectables/HelperService.html":{}},"body":{"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["hour",{"_index":199,"title":{},"body":{"components/CityComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["hourli",{"_index":312,"title":{},"body":{"classes/Climate.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["html",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0001_sunny.png",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":735,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":634,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["humid",{"_index":204,"title":{},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":170,"title":{},"body":{"components/CityComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{}}}],["identifi",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":126,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{}}}],["index",{"_index":131,"title":{"index.html":{}},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{}}}],["initaxi",{"_index":577,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["initchart",{"_index":453,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["initsvg",{"_index":578,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["inject",{"_index":400,"title":{"injectables/HelperService.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/HelperService.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":215,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["ip",{"_index":394,"title":{},"body":{"components/CountryComponent.html":{},"injectables/WeatherService.html":{}}}],["isdaytim",{"_index":284,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["ismailia",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["januari",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":166,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["juli",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["june",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kafr",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":753,"title":{},"body":{"index.html":{}}}],["lat",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["latlon",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layout",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["left",{"_index":467,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["legend",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"overview.html":{}}}],["length",{"_index":366,"title":{},"body":{"components/CountryComponent.html":{}}}],["light",{"_index":266,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["line",{"_index":365,"title":{},"body":{"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["line:max",{"_index":364,"title":{},"body":{"components/CountryComponent.html":{}}}],["liter",{"_index":162,"title":{},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{}}}],["load",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loader",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"dependencies.html":{}}}],["localobsdatetim",{"_index":283,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["localobstime,isdaytim",{"_index":168,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["lon",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["luxor",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mapminadmaxtovisu",{"_index":403,"title":{},"body":{"injectables/HelperService.html":{}}}],["mapminadmaxtovisualize(monthli",{"_index":409,"title":{},"body":{"injectables/HelperService.html":{}}}],["mapobjecttoqueryparam",{"_index":404,"title":{},"body":{"injectables/HelperService.html":{}}}],["mapobjecttoqueryparams(data",{"_index":411,"title":{},"body":{"injectables/HelperService.html":{}}}],["maptovisu",{"_index":405,"title":{},"body":{"injectables/HelperService.html":{}}}],["maptovisualize(weatherdata",{"_index":413,"title":{},"body":{"injectables/HelperService.html":{}}}],["march",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["margin",{"_index":444,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["matbuttonmodul",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matdividermodul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["matruh",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mattablemodul",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodul",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{}}}],["max:{{maxtempc",{"_index":671,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["maxtempc",{"_index":305,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["maxtempf",{"_index":306,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["method",{"_index":139,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{}}}],["min",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["min:{{mintempc",{"_index":670,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["minmaxweatherwidgetcompon",{"_index":42,"title":{"components/MinMaxWeatherWidgetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mintempc",{"_index":307,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["mintempf",{"_index":308,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["minya",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":765,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mist",{"_index":249,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["mix",{"_index":270,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["models/clim",{"_index":417,"title":{},"body":{"injectables/HelperService.html":{}}}],["moder",{"_index":269,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["modul",{"_index":55,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithprovid",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["month",{"_index":206,"title":{},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["month.absmaxtemp",{"_index":436,"title":{},"body":{"injectables/HelperService.html":{}}}],["month.avgmintemp",{"_index":434,"title":{},"body":{"injectables/HelperService.html":{}}}],["month/temp",{"_index":470,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["monthli",{"_index":137,"title":{},"body":{"components/CityComponent.html":{},"injectables/HelperService.html":{}}}],["monthly[0].values.push",{"_index":432,"title":{},"body":{"injectables/HelperService.html":{}}}],["monthly[1].values.push",{"_index":435,"title":{},"body":{"injectables/HelperService.html":{}}}],["monufia",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moon",{"_index":273,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["moon_illumin",{"_index":304,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["moon_phas",{"_index":303,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["moonris",{"_index":301,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["moonset",{"_index":302,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":758,"title":{},"body":{"index.html":{}}}],["n",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":734,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":214,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["navigateto(citynam",{"_index":223,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["ne",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":161,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":363,"title":{},"body":{"components/CountryComponent.html":{}}}],["ng",{"_index":731,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":140,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["ngoninit",{"_index":141,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["ngx",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"dependencies.html":{}}}],["ngxloadinganimationtyp",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloadinganimationtypes.cubegrid",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloadingmodul",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxloadingmodule.forroot",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxservic",{"_index":145,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["ngxuiloadermodul",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxuiloaderservic",{"_index":146,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["night",{"_index":278,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["nne",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["north",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["novemb",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":164,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["number",{"_index":279,"title":{},"body":{"classes/Climate.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{}}}],["number(currentweather.current_condition[0].temp_c",{"_index":426,"title":{},"body":{"injectables/HelperService.html":{}}}],["number(hourweather.tempc",{"_index":430,"title":{},"body":{"injectables/HelperService.html":{}}}],["object",{"_index":462,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["observation_tim",{"_index":280,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["octob",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(testdata",{"_index":653,"title":{},"body":{"injectables/WeatherService.html":{}}}],["ondestroy",{"_index":128,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["oninit",{"_index":127,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["option",{"_index":150,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outbreak",{"_index":261,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["overcast",{"_index":248,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":763,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":697,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":148,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{}}}],["partli",{"_index":246,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["patchi",{"_index":251,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["permiss",{"_index":385,"title":{},"body":{"components/CountryComponent.html":{}}}],["pm",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posit",{"_index":374,"title":{},"body":{"components/CountryComponent.html":{}}}],["position.coords.latitud",{"_index":375,"title":{},"body":{"components/CountryComponent.html":{}}}],["position.coords.longitud",{"_index":376,"title":{},"body":{"components/CountryComponent.html":{}}}],["possibl",{"_index":253,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["precipmm",{"_index":291,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["pressur",{"_index":293,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["primarycolour",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["privat",{"_index":182,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"injectables/WeatherService.html":{}}}],["prod",{"_index":747,"title":{},"body":{"index.html":{}}}],["product",{"_index":749,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":722,"title":{},"body":{"index.html":{}}}],["properti",{"_index":132,"title":{},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{}}}],["protractor",{"_index":755,"title":{},"body":{"index.html":{}}}],["provid",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"overview.html":{}}}],["providedin",{"_index":418,"title":{},"body":{"injectables/HelperService.html":{},"injectables/WeatherService.html":{}}}],["public",{"_index":232,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{}}}],["q",{"_index":163,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["qalyubia",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["qena",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queri",{"_index":647,"title":{},"body":{"injectables/WeatherService.html":{},"miscellaneous/variables.html":{}}}],["queryparam",{"_index":229,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["rain",{"_index":252,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["readi",{"_index":655,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["readm",{"_index":760,"title":{},"body":{"index.html":{}}}],["red",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((a",{"_index":494,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["reload",{"_index":737,"title":{},"body":{"index.html":{}}}],["request",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":153,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["right",{"_index":465,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/HelperService.html":{},"injectables/WeatherService.html":{}}}],["root'},{'nam",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["rotat",{"_index":543,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["rotate(0",{"_index":607,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["rout",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":219,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["routermodule.forroot(approut",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":730,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":416,"title":{},"body":{"injectables/HelperService.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["san",{"_index":569,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["scaffold",{"_index":739,"title":{},"body":{"index.html":{}}}],["scale",{"_index":480,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["sea",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secondarycolour",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["select",{"_index":478,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["septemb",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serif",{"_index":570,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["serv",{"_index":732,"title":{},"body":{"index.html":{}}}],["server",{"_index":729,"title":{},"body":{"index.html":{}}}],["services/helper.servic",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["shape",{"_index":484,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["sharqia",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sheikh",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sinai",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sleet",{"_index":255,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["snow",{"_index":254,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["snowflak",{"_index":258,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["sohag",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"index.html":{}}}],["south",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routing.t",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../climate.t",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../countries.t",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:8",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/c",{"_index":210,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"coverage.html":{}}}],["src/app/components/city/city.component.t",{"_index":125,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["src/app/components/city/city.component.ts:17",{"_index":158,"title":{},"body":{"components/CityComponent.html":{}}}],["src/app/components/city/city.component.ts:18",{"_index":159,"title":{},"body":{"components/CityComponent.html":{}}}],["src/app/components/city/city.component.ts:19",{"_index":173,"title":{},"body":{"components/CityComponent.html":{}}}],["src/app/components/city/city.component.ts:21",{"_index":171,"title":{},"body":{"components/CityComponent.html":{}}}],["src/app/components/city/city.component.ts:31",{"_index":169,"title":{},"body":{"components/CityComponent.html":{}}}],["src/app/components/city/city.component.ts:41",{"_index":147,"title":{},"body":{"components/CityComponent.html":{}}}],["src/app/components/city/city.component.ts:65",{"_index":155,"title":{},"body":{"components/CityComponent.html":{}}}],["src/app/components/city/city.component.ts:68",{"_index":152,"title":{},"body":{"components/CityComponent.html":{}}}],["src/app/components/country/country.component.t",{"_index":338,"title":{},"body":{"components/CountryComponent.html":{},"coverage.html":{}}}],["src/app/components/country/country.component.ts:17",{"_index":353,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:18",{"_index":354,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:19",{"_index":352,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:20",{"_index":355,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:21",{"_index":351,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:22",{"_index":356,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:23",{"_index":359,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:24",{"_index":360,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:25",{"_index":358,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:33",{"_index":347,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:45",{"_index":350,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:70",{"_index":349,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/country/country.component.ts:73",{"_index":348,"title":{},"body":{"components/CountryComponent.html":{}}}],["src/app/components/min",{"_index":439,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"coverage.html":{}}}],["src/app/components/visu",{"_index":572,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{},"coverage.html":{}}}],["src/app/components/weath",{"_index":654,"title":{},"body":{"components/WeatherWidgetComponent.html":{},"coverage.html":{}}}],["src/app/models/clim",{"_index":179,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["src/app/models/climate.t",{"_index":231,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/climate.ts:157",{"_index":238,"title":{},"body":{"classes/Climate.html":{}}}],["src/app/models/climate.ts:58",{"_index":625,"title":{},"body":{"classes/WeatherInterface.html":{}}}],["src/app/models/climate.ts:60",{"_index":626,"title":{},"body":{"classes/WeatherInterface.html":{}}}],["src/app/models/climate.ts:61",{"_index":627,"title":{},"body":{"classes/WeatherInterface.html":{}}}],["src/app/models/climate.ts:67",{"_index":236,"title":{},"body":{"classes/Climate.html":{}}}],["src/app/models/climate.ts:69",{"_index":239,"title":{},"body":{"classes/Climate.html":{}}}],["src/app/models/climate.ts:94",{"_index":240,"title":{},"body":{"classes/Climate.html":{}}}],["src/app/services/helper.servic",{"_index":180,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["src/app/services/helper.service.t",{"_index":401,"title":{},"body":{"injectables/HelperService.html":{},"coverage.html":{}}}],["src/app/services/helper.service.ts:11",{"_index":412,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper.service.ts:31",{"_index":414,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper.service.ts:38",{"_index":410,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper.service.ts:45",{"_index":408,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/helper.service.ts:8",{"_index":406,"title":{},"body":{"injectables/HelperService.html":{}}}],["src/app/services/test",{"_index":689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/weather.servic",{"_index":178,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["src/app/services/weather.service.t",{"_index":628,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/services/weather.service.ts:10",{"_index":635,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:14",{"_index":640,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:20",{"_index":637,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:24",{"_index":638,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/services/weather.service.ts:29",{"_index":643,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/assets/countries.t",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":614,"title":{"index.html":{}},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["statement",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":744,"title":{},"body":{"index.html":{}}}],["string",{"_index":181,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{}}}],["style(\"font",{"_index":567,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["style(\"strok",{"_index":557,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["style(\"text",{"_index":612,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["suef",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suez",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sunhour",{"_index":310,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["sunni",{"_index":243,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["sunris",{"_index":299,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["sunset",{"_index":300,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":761,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":445,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"modules.html":{}}}],["switch",{"_index":379,"title":{},"body":{"components/CountryComponent.html":{}}}],["tabl",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":201,"title":{},"body":{"components/CityComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{}}}],["temp_c",{"_index":217,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["temp_c}}°c",{"_index":230,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["temp_f",{"_index":281,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["tempc",{"_index":313,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["temperatur",{"_index":433,"title":{},"body":{"injectables/HelperService.html":{}}}],["tempf",{"_index":314,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["tertiarycolour",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":646,"title":{},"body":{"injectables/WeatherService.html":{},"index.html":{}}}],["testdata",{"_index":645,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["testdatafordev",{"_index":632,"title":{},"body":{"injectables/WeatherService.html":{}}}],["testdatafordev(object",{"_index":642,"title":{},"body":{"injectables/WeatherService.html":{}}}],["text(\"celsiu",{"_index":618,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["text(\"pass",{"_index":615,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["text(\"temperatur",{"_index":550,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["text(funct",{"_index":571,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.active.queryparams.subscribe(data",{"_index":184,"title":{},"body":{"components/CityComponent.html":{}}}],["this.citiesweath",{"_index":369,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.climatecondit",{"_index":368,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.climatedaycondit",{"_index":370,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.climatenightcondit",{"_index":371,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.currentweath",{"_index":190,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["this.data",{"_index":490,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.drawaxi",{"_index":498,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.drawlin",{"_index":599,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.drawpath",{"_index":499,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.filteredobject.q",{"_index":185,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["this.g",{"_index":506,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.g.append(\"g",{"_index":536,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.g.selectall(\".c",{"_index":551,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.geoplugindata",{"_index":396,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.getasyncdata",{"_index":377,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.height",{"_index":504,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.helperservice.getweatherofcities(this.countri",{"_index":367,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.helperservice.mapminadmaxtovisualize(this.monthli",{"_index":194,"title":{},"body":{"components/CityComponent.html":{}}}],["this.helperservice.mapobjecttoqueryparams(filterobject",{"_index":648,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.helperservice.maptovisualize(this.weatherdata",{"_index":193,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["this.httpclient.get(\"http://api.worldweatheronline.com/premium/v1/weather.ashx?key=2e9f306c80f949aa969150517182510",{"_index":650,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.httpclient.get(\"http://www.geoplugin.net/json.gp?ip",{"_index":651,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.httpclient.get(\"https://api.ipify.org?format=json",{"_index":652,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.i",{"_index":513,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.initaxi",{"_index":598,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.initchart",{"_index":497,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.initsvg",{"_index":597,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.lin",{"_index":518,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.line(d.valu",{"_index":556,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.margin.bottom",{"_index":596,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.margin.left",{"_index":509,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.margin.top",{"_index":510,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.ngxservice.start",{"_index":183,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["this.ngxservice.stop",{"_index":192,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{}}}],["this.readi",{"_index":668,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["this.router.navigate([\"/app/c",{"_index":228,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["this.svg",{"_index":500,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.svg.append(\"g",{"_index":606,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.svg.append(\"g\").attr(\"transform",{"_index":507,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.svg.append(\"path",{"_index":621,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.temps.map((v",{"_index":491,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.testdatafordev(filterobject",{"_index":649,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.weatherservice.getcityfromip(data.ip).subscribe(clientdata",{"_index":395,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.weatherservice.getip().subscribe((data",{"_index":393,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.weatherservice.getweatherincity(this.filteredobject).subscribe((asyncweatherdata",{"_index":188,"title":{},"body":{"components/CityComponent.html":{}}}],["this.weatherservice.getweatherincity(this.filteredobject).subscribe((weatherdata",{"_index":391,"title":{},"body":{"components/CountryComponent.html":{}}}],["this.width",{"_index":502,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.x",{"_index":511,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["this.x(d.dat",{"_index":522,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.x(d.tim",{"_index":619,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.x(d.value.d",{"_index":563,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.x.domain(d3array.extent(this.data",{"_index":525,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.x.domain(d3array.extent(this.weatherdata",{"_index":602,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.y(d.temperatur",{"_index":524,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.y(d.valu",{"_index":620,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.y(d.value.temperatur",{"_index":564,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.y.domain",{"_index":527,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.y.domain(d3array.extent(this.weatherdata",{"_index":604,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["this.z",{"_index":516,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.z(d.id",{"_index":558,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["this.z.domain(this.temps.map(funct",{"_index":534,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["thunderi",{"_index":260,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["thunderstorm",{"_index":262,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":196,"title":{},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["titl",{"_index":446,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["top",{"_index":463,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["totalsnow_cm",{"_index":309,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["translat",{"_index":508,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["translate(0",{"_index":539,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["true",{"_index":669,"title":{},"body":{"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":362,"title":{},"body":{"components/CountryComponent.html":{}}}],["type",{"_index":149,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"injectables/WeatherService.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CountryComponent.html":{},"dependencies.html":{}}}],["unit",{"_index":750,"title":{},"body":{"index.html":{}}}],["unsubscrib",{"_index":177,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"dependencies.html":{}}}],["url",{"_index":241,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{}}}],["urltemp",{"_index":419,"title":{},"body":{"injectables/HelperService.html":{}}}],["urltemp.length",{"_index":422,"title":{},"body":{"injectables/HelperService.html":{}}}],["urltemp.substring(0",{"_index":423,"title":{},"body":{"injectables/HelperService.html":{}}}],["us",{"_index":740,"title":{},"body":{"index.html":{}}}],["usehash",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uvindex",{"_index":311,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["v.values.map((d",{"_index":492,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["valu",{"_index":157,"title":{},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["variabl",{"_index":678,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":726,"title":{},"body":{"index.html":{}}}],["via",{"_index":752,"title":{},"body":{"index.html":{}}}],["viewencapsul",{"_index":477,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["viewencapsulation.non",{"_index":441,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["visibl",{"_index":292,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["visual",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["visualized3weathercompon",{"_index":46,"title":{"components/VisualizeD3WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":154,"title":{},"body":{"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["wadi",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wane",{"_index":275,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["weather",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weather'},{'nam",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["weather.compon",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["weather.component.css",{"_index":574,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.html",{"_index":575,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.t",{"_index":573,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{},"coverage.html":{}}}],["weather.component.ts:20",{"_index":580,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:22",{"_index":589,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:23",{"_index":591,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:24",{"_index":586,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:25",{"_index":592,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:26",{"_index":593,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:27",{"_index":590,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:28",{"_index":579,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:35",{"_index":585,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:43",{"_index":584,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:49",{"_index":583,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:56",{"_index":581,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather.component.ts:83",{"_index":582,"title":{},"body":{"components/VisualizeD3WeatherComponent.html":{}}}],["weather/visu",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"components/VisualizeD3WeatherComponent.html":{},"coverage.html":{}}}],["weatherapp",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["weathercod",{"_index":282,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["weatherdata",{"_index":138,"title":{},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["weatherdata.climateaverages[0].month.foreach((month",{"_index":431,"title":{},"body":{"injectables/HelperService.html":{}}}],["weatherdata.data",{"_index":392,"title":{},"body":{"components/CountryComponent.html":{}}}],["weatherdata.push(new",{"_index":424,"title":{},"body":{"injectables/HelperService.html":{}}}],["weatherdesc",{"_index":286,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"components/WeatherWidgetComponent.html":{},"miscellaneous/variables.html":{}}}],["weathericonurl",{"_index":285,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["weatherinterfac",{"_index":172,"title":{"classes/WeatherInterface.html":{}},"body":{"components/CityComponent.html":{},"classes/Climate.html":{},"components/CountryComponent.html":{},"injectables/HelperService.html":{},"components/VisualizeD3WeatherComponent.html":{},"classes/WeatherInterface.html":{},"coverage.html":{}}}],["weatherinterface((number(hourweather.tim",{"_index":428,"title":{},"body":{"injectables/HelperService.html":{}}}],["weatherinterface(0",{"_index":425,"title":{},"body":{"injectables/HelperService.html":{}}}],["weatherservic",{"_index":144,"title":{"injectables/WeatherService.html":{}},"body":{"components/CityComponent.html":{},"components/CountryComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["weatherwidgetcompon",{"_index":50,"title":{"components/WeatherWidgetComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wi",{"_index":244,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["widget",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["widget'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CityComponent.html":{},"components/CityDashboardWidgetComponent.html":{},"components/CountryComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["widget.compon",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["widget.component.css",{"_index":212,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["widget.component.html",{"_index":213,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["widget.component.t",{"_index":211,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{}}}],["widget.component.ts:10",{"_index":665,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:103",{"_index":456,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:11",{"_index":666,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:12",{"_index":222,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["widget.component.ts:14",{"_index":664,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:15",{"_index":221,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["widget.component.ts:17",{"_index":658,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:18",{"_index":220,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["widget.component.ts:19",{"_index":472,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:20",{"_index":659,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:22",{"_index":226,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{},"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:23",{"_index":662,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:25",{"_index":224,"title":{},"body":{"components/CityDashboardWidgetComponent.html":{}}}],["widget.component.ts:26",{"_index":663,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:29",{"_index":661,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:32",{"_index":660,"title":{},"body":{"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:34",{"_index":459,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:36",{"_index":469,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:37",{"_index":468,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:38",{"_index":460,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/WeatherWidgetComponent.html":{}}}],["widget.component.ts:39",{"_index":473,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:40",{"_index":461,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:41",{"_index":474,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:42",{"_index":475,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:43",{"_index":476,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:44",{"_index":454,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:50",{"_index":458,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:59",{"_index":457,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget.component.ts:86",{"_index":455,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["widget/c",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"components/CityDashboardWidgetComponent.html":{},"coverage.html":{}}}],["widget/min",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/MinMaxWeatherWidgetComponent.html":{},"coverage.html":{}}}],["widget/weath",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/WeatherWidgetComponent.html":{},"coverage.html":{}}}],["width",{"_index":447,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["wind",{"_index":264,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["windchillc",{"_index":319,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["windchillf",{"_index":320,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["winddir16point",{"_index":290,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["winddirdegre",{"_index":289,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["windgustkmph",{"_index":322,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["windgustmil",{"_index":321,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["windi",{"_index":267,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["window.navigator.geoloc",{"_index":372,"title":{},"body":{"components/CountryComponent.html":{}}}],["window.navigator.geolocation.getcurrentposit",{"_index":373,"title":{},"body":{"components/CountryComponent.html":{}}}],["windspeedkmph",{"_index":288,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["windspeedmil",{"_index":287,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{},"miscellaneous/variables.html":{}}}],["wsw",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":448,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["x((d",{"_index":521,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["y",{"_index":449,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["y((d",{"_index":523,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{},"components/VisualizeD3WeatherComponent.html":{}}}],["ye",{"_index":237,"title":{},"body":{"classes/Climate.html":{},"classes/WeatherInterface.html":{}}}],["z",{"_index":450,"title":{},"body":{"components/MinMaxWeatherWidgetComponent.html":{}}}],["zone.j",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n\n  constructor() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n    WeatherApp\n  \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    WeatherApp  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityComponent', 'selector': 'app-city'},{'name': 'CityDashboardWidgetComponent', 'selector': 'app-city-dashboard-widget'},{'name': 'CountryComponent', 'selector': 'app-country'},{'name': 'MinMaxWeatherWidgetComponent', 'selector': 'app-min-max-weather-widget'},{'name': 'VisualizeD3WeatherComponent', 'selector': 'app-visualize-d3-weather'},{'name': 'WeatherWidgetComponent', 'selector': 'app-weather-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nAppModule -->\n\nCityComponent->AppModule\n\n\n\n\n\nCityDashboardWidgetComponent\n\nCityDashboardWidgetComponent\n\nAppModule -->\n\nCityDashboardWidgetComponent->AppModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nAppModule -->\n\nCountryComponent->AppModule\n\n\n\n\n\nMinMaxWeatherWidgetComponent\n\nMinMaxWeatherWidgetComponent\n\nAppModule -->\n\nMinMaxWeatherWidgetComponent->AppModule\n\n\n\n\n\nVisualizeD3WeatherComponent\n\nVisualizeD3WeatherComponent\n\nAppModule -->\n\nVisualizeD3WeatherComponent->AppModule\n\n\n\n\n\nWeatherWidgetComponent\n\nWeatherWidgetComponent\n\nAppModule -->\n\nWeatherWidgetComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHelperService\n\nHelperService\n\nAppModule -->\n\nHelperService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                CityComponent\n                            \n                            \n                                CityDashboardWidgetComponent\n                            \n                            \n                                CountryComponent\n                            \n                            \n                                MinMaxWeatherWidgetComponent\n                            \n                            \n                                VisualizeD3WeatherComponent\n                            \n                            \n                                WeatherWidgetComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     HelperService\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppComponent } from \"./app.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { routing } from \"./app.routing\";\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from \"ngx-loading\";\nimport { CountryComponent } from \"./components/country/country.component\";\nimport { CityComponent } from \"./components/city/city.component\";\nimport { HelperService } from \"./services/helper.service\";\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { WeatherWidgetComponent } from \"./components/weather-widget/weather-widget.component\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { VisualizeD3WeatherComponent } from \"./components/visualize-d3-weather/visualize-d3-weather.component\";\nimport { CityDashboardWidgetComponent } from \"./components/city-dashboard-widget/city-dashboard-widget.component\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MinMaxWeatherWidgetComponent } from \"./components/min-max-weather-widget/min-max-weather-widget.component\";\nimport { NgxUiLoaderModule } from \"ngx-ui-loader\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CountryComponent,\n    CityComponent,\n    WeatherWidgetComponent,\n    VisualizeD3WeatherComponent,\n    CityDashboardWidgetComponent,\n    MinMaxWeatherWidgetComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    routing,\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.cubeGrid,\n      backdropBackgroundColour: \"rgba(0,0,0,0.1)\",\n      backdropBorderRadius: \"4px\",\n      primaryColour: \"#ffffff\",\n      secondaryColour: \"#ffffff\",\n      tertiaryColour: \"#ffffff\"\n    }),\n    FlexLayoutModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDividerModule,\n    NgxUiLoaderModule\n  ],\n  providers: [HelperService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/city/city.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            HelperService\n                \n            \n\n\n            \n                selector\n                app-city\n            \n\n            \n                styleUrls\n                city.component.css\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                climateDayConditions\n                            \n                            \n                                climateNightConditions\n                            \n                            \n                                currentWeather\n                            \n                            \n                                filteredObject\n                            \n                            \n                                monthly\n                            \n                            \n                                weatherData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(active: ActivatedRoute, weatherService: WeatherService, helperService: HelperService, ngxService: NgxUiLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/city/city.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                    HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngxService\n                                                  \n                                                        \n                                                                    NgxUiLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/city/city.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/city/city.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climateDayConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateDayConditions:     \n\n                    \n                \n                    \n                        \n                            Default value : climateDayCondition\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/city/city.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climateNightConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateNightConditions:     \n\n                    \n                \n                    \n                        \n                            Default value : climateNightCondition\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/city/city.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentWeather:     Climate\n\n                    \n                \n                    \n                        \n                            Type :     Climate\n\n                        \n                    \n                    \n                        \n                            Default value : new Climate()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/city/city.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredObject:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n      q: null,\n      format: \"json\",\n      extra: \"localObsTime,isDayTime\"\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/city/city.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            monthly\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        monthly:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      \"id\": \"Min\",\n      \"values\": []\n    },\n    {\n      \"id\": \"Max\",\n      \"values\": []\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/city/city.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherData:     WeatherInterface[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/city/city.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AutoUnsubscribe } from \"ngx-auto-unsubscribe\";\nimport { WeatherService } from \"src/app/services/weather.service\";\nimport { Climate, climateNightCondition, climateDayCondition, WeatherInterface } from \"src/app/models/climate\";\nimport { HelperService } from \"src/app/services/helper.service\";\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\n\n@AutoUnsubscribe()\n@Component({\n  selector: \"app-city\",\n  templateUrl: \"./city.component.html\",\n  styleUrls: [\"./city.component.css\"],\n  providers: [HelperService]\n})\nexport class CityComponent implements OnInit, OnDestroy {\n  climateDayConditions = climateDayCondition;\n  climateNightConditions = climateNightCondition;\n  weatherData: WeatherInterface[] = [];\n\n  monthly = [\n    {\n      \"id\": \"Min\",\n      \"values\": []\n    },\n    {\n      \"id\": \"Max\",\n      \"values\": []\n    }\n  ];\n  filteredObject: {\n    q: string,\n    format: string\n    extra: string\n  } = {\n      q: null,\n      format: \"json\",\n      extra: \"localObsTime,isDayTime\"\n    };\n\n  currentWeather: Climate = new Climate();\n\n  constructor\n    (\n    private active: ActivatedRoute,\n    private weatherService: WeatherService,\n    private helperService: HelperService,\n    private ngxService: NgxUiLoaderService\n    ) {\n      this.ngxService.start();\n      this.active.queryParams.subscribe(data => {\n      this.filteredObject.q = data.city + \" Egypt\";\n      this.weatherService.getWeatherInCity(this.filteredObject).subscribe((asyncWeatherData: { data: any }) => {\n        this.currentWeather = asyncWeatherData.data;\n        this.ngxService.stop();\n        this.helperService.mapToVisualize(this.weatherData, this.currentWeather);\n\n        this.helperService.mapMinAdMaxToVisualize(this.monthly, this.currentWeather);\n\n      });\n    });\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n\n    \n\n    \n        \n  \n    {{filteredObject.q}}\n  \n  \n    \n      \n        \n          \n            \n            \n          \n        \n      \n      \n        \n          \n            \n            \n          \n        \n      \n      \n        \n\n          \n             Time \n             + {{(element.time/100 )+3}} Hours \n          \n\n\n          \n             Weather \n             \n              {{element.weatherDesc[0].value}} \n          \n\n          \n             Temp °C \n             {{element.tempC}}°C \n          \n\n          \n             Humidity \n              {{element.humidity}}% \n            \n          \n\n          \n          \n        \n      \n    \n    \n    \n      \n        \n          \n            \n\n              \n                 Month \n                 {{element.name}} \n              \n\n\n              \n                 Min Temp °C \n                {{element.avgMinTemp}}°C \n              \n\n              \n                 Max Temp °C \n                 {{element.absMaxTemp}}°C \n              \n\n              \n              \n            \n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{filteredObject.q}}                                                                                                                                                                                             Time              + {{(element.time/100 )+3}} Hours                                  Weather                            {{element.weatherDesc[0].value}}                                  Temp °C              {{element.tempC}}°C                                  Humidity               {{element.humidity}}%                                                                                                                                        Month                  {{element.name}}                                              Min Temp °C                 {{element.avgMinTemp}}°C                                              Max Temp °C                  {{element.absMaxTemp}}°C                                                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityComponent', 'selector': 'app-city'},{'name': 'CityDashboardWidgetComponent', 'selector': 'app-city-dashboard-widget'},{'name': 'CountryComponent', 'selector': 'app-country'},{'name': 'MinMaxWeatherWidgetComponent', 'selector': 'app-min-max-weather-widget'},{'name': 'VisualizeD3WeatherComponent', 'selector': 'app-visualize-d3-weather'},{'name': 'WeatherWidgetComponent', 'selector': 'app-weather-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityDashboardWidgetComponent.html":{"url":"components/CityDashboardWidgetComponent.html","title":"component - CityDashboardWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityDashboardWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/city-dashboard-widget/city-dashboard-widget.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-city-dashboard-widget\n            \n\n            \n                styleUrls\n                city-dashboard-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./city-dashboard-widget.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateTo\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                name\n                            \n                            \n                                temp_C\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/city-dashboard-widget/city-dashboard-widget.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        condition\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/city-dashboard-widget/city-dashboard-widget.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/city-dashboard-widget/city-dashboard-widget.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        temp_C\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/city-dashboard-widget/city-dashboard-widget.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo(cityName: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/city-dashboard-widget/city-dashboard-widget.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cityName\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/city-dashboard-widget/city-dashboard-widget.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-city-dashboard-widget\",\n  templateUrl: \"./city-dashboard-widget.component.html\",\n  styleUrls: [\"./city-dashboard-widget.component.css\"]\n})\nexport class CityDashboardWidgetComponent implements OnInit {\n\n  @Input()\n  temp_C: string;\n\n  @Input()\n  name: string;\n\n  @Input()\n  condition: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateTo(cityName) {\n    this.router.navigate([\"/app/city\"], {\n      queryParams: { city: cityName }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      {{name}}\n      {{temp_C}}°C\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{name}}      {{temp_C}}°C      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityComponent', 'selector': 'app-city'},{'name': 'CityDashboardWidgetComponent', 'selector': 'app-city-dashboard-widget'},{'name': 'CountryComponent', 'selector': 'app-country'},{'name': 'MinMaxWeatherWidgetComponent', 'selector': 'app-min-max-weather-widget'},{'name': 'VisualizeD3WeatherComponent', 'selector': 'app-visualize-d3-weather'},{'name': 'WeatherWidgetComponent', 'selector': 'app-weather-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CityDashboardWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Climate.html":{"url":"classes/Climate.html","title":"class - Climate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Climate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/climate.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                ClimateAverages\n                            \n                            \n                                    Public\n                                    Optional\n                                current_condition\n                            \n                            \n                                    Public\n                                    Optional\n                                weather\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(current_condition?: literal type[], weather?: literal type[], ClimateAverages?: literal type[])\n                    \n                \n                        \n                            \n                                Defined in src/app/models/climate.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        current_condition\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        weather\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        ClimateAverages\n                                                  \n                                                        \n                                                                    literal type[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            ClimateAverages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ClimateAverages:     literal type[]\n\n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/climate.ts:157\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            current_condition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        current_condition:     literal type[]\n\n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/climate.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            weather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weather:     literal type[]\n\n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/climate.ts:94\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Url } from \"url\";\n\nexport const climateDayCondition = {\n  \"Sunny\": \"wi-day-sunny\",\n  \"Partly cloudy\": \"wi-day-cloudy\",\n  \"Cloudy\": \"wi-cloudy\",\n  \"Overcast\": \"wi-day-sunny-overcast\",\n  \"Mist\": \"wi-fog\",\n  \"Patchy rain possible\": \"wi-day-rain\",\n  \"Patchy snow possible\": \"wi-snow\",\n  \"Patchy sleet possible\": \"wi-sleet\",\n  \"Patchy freezing drizzle possible\": \"wi-snowflake-cold\",\n  \"Thundery outbreaks possible\": \"wi-thunderstorm\",\n  \"Blowing snow\": \"wi-snow-wind\",\n  \"Blizzard\": \"wi-day-snow-thunderstorm\",\n  \"Fog\": \"wi-day-fog\",\n  \"Freezing fog\": \"wi-day-fog\",\n  \"Patchy light drizzle\": \"wi-day-cloudy-windy\",\n  \"Light drizzle\": \"wi-day-cloudy-windy\",\n  \"Freezing drizzle\": \"wi-day-cloudy-windy\",\n  \"Heavy freezing drizzle\": \"wi-day-cloudy-windy\",\n  \"Patchy light rain\": \"wi-day-rain\",\n  \"Light rain\": \"wi-day-rain\",\n  \"Moderate rain at times\": \"wi-day-rain-mix\",\n  \"Moderate rain\": \"wi-day-rain-mix\",\n  \"Heavy rain at times\": \"wi-day-hail\",\n  \"Heavy rain\": \"wi-day-hail\",\n  \"Light freezing rain\": \"wi-day-sleet\"\n};\nexport const climateNightCondition = {\n  \"Clear\": \"wi-moon-alt-waning-crescent-6\",\n  \"Partly cloudy\": \"wi-night-cloudy\",\n  \"Cloudy\": \"wi-cloudy\",\n  \"Overcast\": \"wi-night-sunny-overcast\",\n  \"Mist\": \"wi-fog\",\n  \"Patchy rain possible\": \"wi-night-rain\",\n  \"Patchy snow possible\": \"wi-snow\",\n  \"Patchy sleet possible\": \"wi-sleet\",\n  \"Patchy freezing drizzle possible\": \"wi-snowflake-cold\",\n  \"Thundery outbreaks possible\": \"wi-thunderstorm\",\n  \"Blowing snow\": \"wi-snow-wind\",\n  \"Blizzard\": \"wi-night-snow-thunderstorm\",\n  \"Fog\": \"wi-night-fog\",\n  \"Freezing fog\": \"wi-night-fog\",\n  \"Patchy light drizzle\": \"wi-night-cloudy-windy\",\n  \"Light drizzle\": \"wi-night-cloudy-windy\",\n  \"Freezing drizzle\": \"wi-night-cloudy-windy\",\n  \"Heavy freezing drizzle\": \"wi-night-cloudy-windy\",\n  \"Patchy light rain\": \"wi-night-rain\",\n  \"Light rain\": \"wi-night-rain\",\n  \"Moderate rain at times\": \"wi-night-rain-mix\",\n  \"Moderate rain\": \"wi-night-rain-mix\",\n  \"Heavy rain at times\": \"wi-night-hail\",\n  \"Heavy rain\": \"wi-night-hail\",\n  \"Light freezing rain\": \"wi-night-sleet\"\n};\n\nexport class WeatherInterface {\n  constructor(\n    public time?: number,\n    public value?: number\n  ) { }\n}\n\n\n\nexport class Climate {\n  constructor(\n    public current_condition?: {\n      observation_time: string,\n      temp_C: string,\n      temp_F: string,\n      weatherCode: string,\n      localObsDateTime: string,\n      isdaytime: string,\n      weatherIconUrl: {\n        value: string\n      }[],\n      weatherDesc: {\n        value: string\n      }[],\n      windspeedMiles: string,\n      windspeedKmph: string,\n      winddirDegree: string,\n      winddir16Point: string,\n      precipMM: string,\n      humidity: string,\n      visibility: string,\n      pressure: string,\n      cloudcover: string,\n      FeelsLikeC: string,\n      FeelsLikeF: string\n    }[],\n    public weather?:\n      {\n        date: Date,\n        astronomy: [\n          {\n            sunrise: string,\n            sunset: string,\n            moonrise: string,\n            moonset: string,\n            moon_phase: string,\n            moon_illumination: string\n          }\n        ],\n        maxtempC: string,\n        maxtempF: string,\n        mintempC: string,\n        mintempF: string,\n        totalSnow_cm: string,\n        sunHour: string,\n        uvIndex: string,\n        hourly:\n        {\n          time: string,\n          tempC: string,\n          tempF: string,\n          windspeedMiles: string,\n          windspeedKmph: string,\n          winddirDegree: string,\n          winddir16Point: string,\n          weatherCode: string,\n          weatherIconUrl: {\n            value: string\n          }[],\n          weatherDesc: {\n            value: string\n          }[],\n          precipMM: string,\n          humidity: string,\n          visibility: string,\n          pressure: string,\n          cloudcover: string,\n          HeatIndexC: string,\n          HeatIndexF: string,\n          DewPointC: string,\n          DewPointF: string,\n          WindChillC: string,\n          WindChillF: string,\n          WindGustMiles: string,\n          WindGustKmph: string,\n          FeelsLikeC: string,\n          FeelsLikeF: string,\n          chanceofrain: string,\n          chanceofremdry: string,\n          chanceofwindy: string,\n          chanceofovercast: string,\n          chanceofsunshine: string,\n          chanceoffrost: string,\n          chanceofhightemp: string,\n          chanceoffog: string,\n          chanceofsnow: string,\n          chanceofthunder: string\n        }[]\n      }[],\n    public ClimateAverages?:\n      {\n        month:\n        {\n          index: string,\n          name: string,\n          avgMinTemp: string,\n          avgMinTemp_F: string,\n          absMaxTemp: string,\n          absMaxTemp_F: string,\n          avgDailyRainfall: string,\n        }[]\n      }[]\n  ) { }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CountryComponent.html":{"url":"components/CountryComponent.html","title":"component - CountryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CountryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/country/country.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            HelperService\n                \n            \n\n\n            \n                selector\n                app-country\n            \n\n            \n                styleUrls\n                country.component.css\n            \n\n\n\n            \n                templateUrl\n                ./country.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                citiesWeathers\n                            \n                            \n                                climateCondition\n                            \n                            \n                                climateDayConditions\n                            \n                            \n                                climateNightConditions\n                            \n                            \n                                countries\n                            \n                            \n                                currentWeather\n                            \n                            \n                                filteredObject\n                            \n                            \n                                geopluginData\n                            \n                            \n                                weatherData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getasyncData\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherService: WeatherService, helperService: HelperService, ngxService: NgxUiLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/country/country.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherService\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                    HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngxService\n                                                  \n                                                        \n                                                                    NgxUiLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getasyncData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetasyncData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            citiesWeathers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        citiesWeathers:     literal type[]\n\n                    \n                \n                    \n                        \n                            Type :     literal type[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climateCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateCondition:     null\n\n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climateDayConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateDayConditions:     \n\n                    \n                \n                    \n                        \n                            Default value : climateDayCondition\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climateNightConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateNightConditions:     \n\n                    \n                \n                    \n                        \n                            Default value : climateNightCondition\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            countries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        countries:     \n\n                    \n                \n                    \n                        \n                            Default value : countries\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentWeather\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentWeather:     Climate\n\n                    \n                \n                    \n                        \n                            Type :     Climate\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filteredObject:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n      q: \"Cairo Egypt\",\n      format: \"json\",\n      extra: \"localObsTime,isDayTime\"\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geopluginData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geopluginData:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            weatherData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weatherData:     WeatherInterface[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/country/country.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from \"@angular/core\";\nimport { countries } from \"../../../assets/countries\";\nimport { WeatherService } from \"src/app/services/weather.service\";\nimport { Climate, WeatherInterface, climateDayCondition, climateNightCondition } from \"src/app/models/climate\";\nimport { AutoUnsubscribe } from \"ngx-auto-unsubscribe\";\nimport { HelperService } from \"src/app/services/helper.service\";\nimport { NgxUiLoaderService } from \"ngx-ui-loader\";\n\n@AutoUnsubscribe()\n@Component({\n  selector: \"app-country\",\n  templateUrl: \"./country.component.html\",\n  styleUrls: [\"./country.component.css\"],\n  providers: [HelperService]\n})\nexport class CountryComponent implements OnInit, OnDestroy {\n  climateDayConditions = climateDayCondition;\n  climateNightConditions = climateNightCondition;\n  climateCondition = null;\n  countries = countries;\n  citiesWeathers: { name: string, temp_C: string, condition: string }[] = [];\n  currentWeather: Climate = null;\n  geopluginData: any = null;\n  weatherData: WeatherInterface[] = [];\n  filteredObject: {\n    q: string,\n    format: string\n    extra: string\n  } = {\n      q: \"Cairo Egypt\",\n      format: \"json\",\n      extra: \"localObsTime,isDayTime\"\n    };\n\n  constructor(\n    private weatherService: WeatherService,\n    private helperService: HelperService,\n    private ngxService: NgxUiLoaderService\n  ) {\n    this.ngxService.start();\n    // tslint:disable-next-line:max-line-length\n    this.helperService.getWeatherOfCities(this.countries, this.climateCondition, this.citiesWeathers, this.climateDayConditions, this.climateNightConditions);\n  }\n\n  ngOnInit() {\n    if (window.navigator.geolocation) {\n      window.navigator.geolocation.getCurrentPosition(\n        position => {\n          this.filteredObject.q = position.coords.latitude + \",\" + position.coords.longitude;\n          this.getasyncData();\n\n        },\n        error => {\n          this.getasyncData();\n          switch (error.code) {\n            case 1:\n              alert(\"Please give the permission for the geolocation\");\n              break;\n            case 2:\n              alert(\"Please check the connection\");\n              break;\n            case 3:\n              alert(\"Please check the connection\");\n              break;\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  getasyncData() {\n    this.weatherService.getWeatherInCity(this.filteredObject).subscribe((weatherData: { data: any }) => {\n      this.currentWeather = weatherData.data;\n      this.helperService.mapToVisualize(this.weatherData, this.currentWeather);\n    });\n\n    this.weatherService.getIp().subscribe((data: { ip: string }) => {\n      this.weatherService.getCityFromIp(data.ip).subscribe(clientData => {\n        this.ngxService.stop();\n        this.geopluginData = clientData;\n      });\n    });\n\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Weather of {{geopluginData.geoplugin_city}}: at \n      \n        {{currentWeather.current_condition[0].localObsDateTime}}\n    \n  \n  \n    \n      \n        \n          \n            \n              \n                \n                \n              \n              \n                \n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n                \n\n                \n              \n            \n          \n        \n      \n      \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather of {{geopluginData.geoplugin_city}}: at               {{currentWeather.current_condition[0].localObsDateTime}}                                                                                                                                                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityComponent', 'selector': 'app-city'},{'name': 'CityDashboardWidgetComponent', 'selector': 'app-city-dashboard-widget'},{'name': 'CountryComponent', 'selector': 'app-country'},{'name': 'MinMaxWeatherWidgetComponent', 'selector': 'app-min-max-weather-widget'},{'name': 'VisualizeD3WeatherComponent', 'selector': 'app-visualize-d3-weather'},{'name': 'WeatherWidgetComponent', 'selector': 'app-weather-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CountryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelperService.html":{"url":"injectables/HelperService.html","title":"injectable - HelperService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/helper.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWeatherOfCities\n                            \n                            \n                                mapMinAdMaxToVisualize\n                            \n                            \n                                mapObjectToQueryParams\n                            \n                            \n                                mapToVisualize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/helper.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWeatherOfCities\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWeatherOfCities(countries: , climateCondition: , citiesWeathers: , climateDayConditions: , climateNightConditions: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/helper.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        countries\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        climateCondition\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        citiesWeathers\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        climateDayConditions\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        climateNightConditions\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapMinAdMaxToVisualize\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapMinAdMaxToVisualize(monthly: , weatherData: Climate)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/helper.service.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monthly\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        weatherData\n                                                        \n                                                                    Climate\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapObjectToQueryParams\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapObjectToQueryParams(data: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/helper.service.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapToVisualize\n                            \n                            \n                        \n                    \n                \n                \n                    \nmapToVisualize(weatherData: , currentWeather: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/helper.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherData\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        currentWeather\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { WeatherInterface, Climate } from \"../models/climate\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class HelperService {\n  constructor() { }\n\n  mapObjectToQueryParams(data) {\n    let urlTemp = \"\";\n    for (const anAttribute in data) {\n      if (anAttribute) {\n        const value = data[anAttribute];\n        if (value) {\n          urlTemp += anAttribute;\n          urlTemp += \"=\";\n          urlTemp += value;\n          urlTemp += \"&\";\n        }\n      }\n    }\n    if (urlTemp.length > 1) {\n      urlTemp = urlTemp.substring(0, urlTemp.length - 1);\n    }\n    return urlTemp;\n  }\n\n\n  mapToVisualize(weatherData, currentWeather) {\n    weatherData.push(new WeatherInterface(0, Number(currentWeather.current_condition[0].temp_C)));\n    currentWeather.weather[0].hourly.forEach(hourWeather => {\n      weatherData.push(new WeatherInterface((Number(hourWeather.time) / 100) + 3, Number(hourWeather.tempC)));\n    });\n  }\n\n  mapMinAdMaxToVisualize(monthly, weatherData: Climate) {\n    weatherData.ClimateAverages[0].month.forEach((month, index) => {\n      monthly[0].values.push({ date: index + 1, temperature: month.avgMinTemp });\n      monthly[1].values.push({ date: index + 1, temperature: month.absMaxTemp });\n    });\n  }\n\n  getWeatherOfCities(countries, climateCondition, citiesWeathers, climateDayConditions, climateNightConditions) {\n    countries.forEach(country => {\n      country.Egypt.forEach(city => {\n        climateCondition = (6 \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MinMaxWeatherWidgetComponent.html":{"url":"components/MinMaxWeatherWidgetComponent.html","title":"component - MinMaxWeatherWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MinMaxWeatherWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-min-max-weather-widget\n            \n\n            \n                styleUrls\n                min-max-weather-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./min-max-weather-widget.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                g\n                            \n                            \n                                height\n                            \n                            \n                                line\n                            \n                            \n                                margin\n                            \n                            \n                                svg\n                            \n                            \n                                title\n                            \n                            \n                                width\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                            \n                                z\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawAxis\n                            \n                            \n                                    Private\n                                drawPath\n                            \n                            \n                                    Private\n                                initChart\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                temps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:44\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        temps\n                    \n                    \n                        \n                            Default value : [\n    {\n      \"id\": \"Min\",\n      \"values\": []\n    },\n    {\n      \"id\": \"Max\",\n      \"values\": []\n    }\n  ]\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawAxis()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initChart\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initChart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            g\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        g:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            line\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        line:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            margin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        margin:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { top: 20, right: 20, bottom: 20, left: 20 }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            svg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        svg:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"Month/Temp Chart\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            x\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        x:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            y\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        y:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            z\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        z:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation, Input } from \"@angular/core\";\n\nimport * as d3 from \"d3-selection\";\nimport * as d3Scale from \"d3-scale\";\nimport * as d3ScaleChromatic from \"d3-scale-chromatic\";\nimport * as d3Shape from \"d3-shape\";\nimport * as d3Array from \"d3-array\";\nimport * as d3Axis from \"d3-axis\";\nimport * as d3TimeFormat from \"d3-time-format\";\n\n@Component({\n  selector: \"app-min-max-weather-widget\",\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: \"./min-max-weather-widget.component.html\",\n  styleUrls: [\"./min-max-weather-widget.component.css\"]\n})\nexport class MinMaxWeatherWidgetComponent implements OnInit {\n\n  title = \"Month/Temp Chart\";\n\n  @Input()\n  temps = [\n    {\n      \"id\": \"Min\",\n      \"values\": []\n    },\n    {\n      \"id\": \"Max\",\n      \"values\": []\n    }\n  ];\n\n\n  data: any;\n\n  svg: any;\n  margin = { top: 20, right: 20, bottom: 20, left: 20 };\n  g: any;\n  width: number;\n  height: number;\n  x;\n  y;\n  z;\n  line;\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    this.data = this.temps.map((v) => v.values.map((d) => d.date))[0];\n    // .reduce((a, b) => a.concat(b), []);\n\n    this.initChart();\n    this.drawAxis();\n    this.drawPath();\n  }\n\n  private initChart(): void {\n    this.svg = d3.select(\"#cityChart\");\n\n    this.width = 300;\n    this.height = 400;\n\n    this.g = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n\n    this.x = d3Scale.scaleLinear().range([0, this.width]);\n    this.y = d3Scale.scaleLinear().range([this.height, 0]);\n    this.z = d3Scale.scaleOrdinal(d3ScaleChromatic.schemeCategory10);\n\n    this.line = d3Shape.line()\n      .curve(d3Shape.curveBasis)\n      .x((d: any) => this.x(d.date))\n      .y((d: any) => this.y(d.temperature));\n\n    this.x.domain(d3Array.extent(this.data, (d: Date) => d));\n\n    this.y.domain([\n      d3Array.min(this.temps, function (c) { return d3Array.min(c.values, function (d) { return d.temperature; }); }),\n      d3Array.max(this.temps, function (c) { return d3Array.max(c.values, function (d) { return d.temperature; }); })\n    ]);\n\n    this.z.domain(this.temps.map(function (c) { return c.id; }));\n  }\n\n  private drawAxis(): void {\n    this.g.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .call(d3Axis.axisBottom(this.x));\n\n    this.g.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3Axis.axisLeft(this.y))\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, ºC\");\n  }\n\n  private drawPath(): void {\n    const city = this.g.selectAll(\".city\")\n      .data(this.temps)\n      .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n    city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", (d) => this.line(d.values))\n      .style(\"stroke\", (d) => this.z(d.id));\n\n    city.append(\"text\")\n      .datum(function (d) { return { id: d.id, value: d.values[d.values.length - 1] }; })\n      .attr(\"transform\", (d) => \"translate(\" + this.x(d.value.date) + \",\" + this.y(d.value.temperature) + \")\")\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .text(function (d) { return d.id; });\n  }\n\n\n}\n\n    \n\n    \n        {{ title }}\n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ title }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityComponent', 'selector': 'app-city'},{'name': 'CityDashboardWidgetComponent', 'selector': 'app-city-dashboard-widget'},{'name': 'CountryComponent', 'selector': 'app-country'},{'name': 'MinMaxWeatherWidgetComponent', 'selector': 'app-min-max-weather-widget'},{'name': 'VisualizeD3WeatherComponent', 'selector': 'app-visualize-d3-weather'},{'name': 'WeatherWidgetComponent', 'selector': 'app-weather-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MinMaxWeatherWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VisualizeD3WeatherComponent.html":{"url":"components/VisualizeD3WeatherComponent.html","title":"component - VisualizeD3WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  VisualizeD3WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-visualize-d3-weather\n            \n\n            \n                styleUrls\n                visualize-d3-weather.component.css\n            \n\n\n\n            \n                templateUrl\n                ./visualize-d3-weather.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                height\n                            \n                            \n                                    Private\n                                line\n                            \n                            \n                                    Private\n                                margin\n                            \n                            \n                                    Private\n                                svg\n                            \n                            \n                                    Private\n                                width\n                            \n                            \n                                    Private\n                                x\n                            \n                            \n                                    Private\n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                drawAxis\n                            \n                            \n                                    Private\n                                drawLine\n                            \n                            \n                                    Private\n                                initAxis\n                            \n                            \n                                    Private\n                                initSvg\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                weatherData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:28\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        weatherData\n                    \n                    \n                            \n                            Type :    WeatherInterface[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawAxis()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            drawLine\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawLine()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initAxis\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initAxis()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initSvg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initSvg()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            line\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        line:     d3Shape.Line<>\n\n                    \n                \n                    \n                        \n                            Type :     d3Shape.Line<>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            margin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        margin:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { top: 20, right: 20, bottom: 30, left: 50 }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            svg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        svg:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            x\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        x:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            y\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        y:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from \"@angular/core\";\n\n\nimport * as d3 from \"d3-selection\";\nimport * as d3Scale from \"d3-scale\";\nimport * as d3Shape from \"d3-shape\";\nimport * as d3Array from \"d3-array\";\nimport * as d3Axis from \"d3-axis\";\nimport { WeatherInterface } from \"src/app/models/climate\";\n\n\n@Component({\n  selector: \"app-visualize-d3-weather\",\n  templateUrl: \"./visualize-d3-weather.component.html\",\n  styleUrls: [\"./visualize-d3-weather.component.css\"]\n})\nexport class VisualizeD3WeatherComponent implements OnInit {\n\n  @Input()\n  weatherData: WeatherInterface[];\n\n  private margin = { top: 20, right: 20, bottom: 30, left: 50 };\n  private width: number;\n  private height: number;\n  private x: any;\n  private y: any;\n  private svg: any;\n  private line: d3Shape.Line;\n\n  constructor() {\n    this.width = 220;\n    this.height = 200 - this.margin.top - this.margin.bottom;\n  }\n\n  ngOnInit() {\n    this.initSvg();\n    this.initAxis();\n    this.drawAxis();\n    this.drawLine();\n  }\n\n\n  private initSvg() {\n    this.svg = d3.select(\"#line\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + this.margin.left + \",\" + this.margin.top + \")\");\n  }\n\n  private initAxis() {\n    this.x = d3Scale.scaleLinear().range([0, this.width]);\n    this.y = d3Scale.scaleLinear().range([this.height, 0]);\n    this.x.domain(d3Array.extent(this.weatherData, (d) => d.time));\n    this.y.domain(d3Array.extent(this.weatherData, (d) => d.value));\n  }\n\n  private drawAxis() {\n\n    this.svg.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + this.height + \")\")\n      .call(d3Axis.axisBottom(this.x))\n      .append(\"text\")\n      .attr(\"class\", \"axis-title\")\n      .attr(\"transform\", \"rotate(0)\")\n      .attr(\"x\", 180)\n      .attr(\"y\", 25)\n      .attr(\"dx\", \"0.6em\")\n      .style(\"text-anchor\", \"start\")\n      .text(\"Passed Hours\");\n\n    this.svg.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(d3Axis.axisLeft(this.y))\n      .append(\"text\")\n      .attr(\"class\", \"axis-title\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".8em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Celsius °\");\n  }\n\n  private drawLine() {\n    this.line = d3Shape.line()\n      .x((d: any) => this.x(d.time))\n      .y((d: any) => this.y(d.value));\n\n    this.svg.append(\"path\")\n      .datum(this.weatherData)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", this.line);\n  }\n\n}\n\n    \n\n    \n        \n  \n    Hourly Changes\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Hourly Changes  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityComponent', 'selector': 'app-city'},{'name': 'CityDashboardWidgetComponent', 'selector': 'app-city-dashboard-widget'},{'name': 'CountryComponent', 'selector': 'app-country'},{'name': 'MinMaxWeatherWidgetComponent', 'selector': 'app-min-max-weather-widget'},{'name': 'VisualizeD3WeatherComponent', 'selector': 'app-visualize-d3-weather'},{'name': 'WeatherWidgetComponent', 'selector': 'app-weather-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VisualizeD3WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WeatherInterface.html":{"url":"classes/WeatherInterface.html","title":"class - WeatherInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WeatherInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/climate.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                time\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(time?: number, value?: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/climate.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/climate.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/climate.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Url } from \"url\";\n\nexport const climateDayCondition = {\n  \"Sunny\": \"wi-day-sunny\",\n  \"Partly cloudy\": \"wi-day-cloudy\",\n  \"Cloudy\": \"wi-cloudy\",\n  \"Overcast\": \"wi-day-sunny-overcast\",\n  \"Mist\": \"wi-fog\",\n  \"Patchy rain possible\": \"wi-day-rain\",\n  \"Patchy snow possible\": \"wi-snow\",\n  \"Patchy sleet possible\": \"wi-sleet\",\n  \"Patchy freezing drizzle possible\": \"wi-snowflake-cold\",\n  \"Thundery outbreaks possible\": \"wi-thunderstorm\",\n  \"Blowing snow\": \"wi-snow-wind\",\n  \"Blizzard\": \"wi-day-snow-thunderstorm\",\n  \"Fog\": \"wi-day-fog\",\n  \"Freezing fog\": \"wi-day-fog\",\n  \"Patchy light drizzle\": \"wi-day-cloudy-windy\",\n  \"Light drizzle\": \"wi-day-cloudy-windy\",\n  \"Freezing drizzle\": \"wi-day-cloudy-windy\",\n  \"Heavy freezing drizzle\": \"wi-day-cloudy-windy\",\n  \"Patchy light rain\": \"wi-day-rain\",\n  \"Light rain\": \"wi-day-rain\",\n  \"Moderate rain at times\": \"wi-day-rain-mix\",\n  \"Moderate rain\": \"wi-day-rain-mix\",\n  \"Heavy rain at times\": \"wi-day-hail\",\n  \"Heavy rain\": \"wi-day-hail\",\n  \"Light freezing rain\": \"wi-day-sleet\"\n};\nexport const climateNightCondition = {\n  \"Clear\": \"wi-moon-alt-waning-crescent-6\",\n  \"Partly cloudy\": \"wi-night-cloudy\",\n  \"Cloudy\": \"wi-cloudy\",\n  \"Overcast\": \"wi-night-sunny-overcast\",\n  \"Mist\": \"wi-fog\",\n  \"Patchy rain possible\": \"wi-night-rain\",\n  \"Patchy snow possible\": \"wi-snow\",\n  \"Patchy sleet possible\": \"wi-sleet\",\n  \"Patchy freezing drizzle possible\": \"wi-snowflake-cold\",\n  \"Thundery outbreaks possible\": \"wi-thunderstorm\",\n  \"Blowing snow\": \"wi-snow-wind\",\n  \"Blizzard\": \"wi-night-snow-thunderstorm\",\n  \"Fog\": \"wi-night-fog\",\n  \"Freezing fog\": \"wi-night-fog\",\n  \"Patchy light drizzle\": \"wi-night-cloudy-windy\",\n  \"Light drizzle\": \"wi-night-cloudy-windy\",\n  \"Freezing drizzle\": \"wi-night-cloudy-windy\",\n  \"Heavy freezing drizzle\": \"wi-night-cloudy-windy\",\n  \"Patchy light rain\": \"wi-night-rain\",\n  \"Light rain\": \"wi-night-rain\",\n  \"Moderate rain at times\": \"wi-night-rain-mix\",\n  \"Moderate rain\": \"wi-night-rain-mix\",\n  \"Heavy rain at times\": \"wi-night-hail\",\n  \"Heavy rain\": \"wi-night-hail\",\n  \"Light freezing rain\": \"wi-night-sleet\"\n};\n\nexport class WeatherInterface {\n  constructor(\n    public time?: number,\n    public value?: number\n  ) { }\n}\n\n\n\nexport class Climate {\n  constructor(\n    public current_condition?: {\n      observation_time: string,\n      temp_C: string,\n      temp_F: string,\n      weatherCode: string,\n      localObsDateTime: string,\n      isdaytime: string,\n      weatherIconUrl: {\n        value: string\n      }[],\n      weatherDesc: {\n        value: string\n      }[],\n      windspeedMiles: string,\n      windspeedKmph: string,\n      winddirDegree: string,\n      winddir16Point: string,\n      precipMM: string,\n      humidity: string,\n      visibility: string,\n      pressure: string,\n      cloudcover: string,\n      FeelsLikeC: string,\n      FeelsLikeF: string\n    }[],\n    public weather?:\n      {\n        date: Date,\n        astronomy: [\n          {\n            sunrise: string,\n            sunset: string,\n            moonrise: string,\n            moonset: string,\n            moon_phase: string,\n            moon_illumination: string\n          }\n        ],\n        maxtempC: string,\n        maxtempF: string,\n        mintempC: string,\n        mintempF: string,\n        totalSnow_cm: string,\n        sunHour: string,\n        uvIndex: string,\n        hourly:\n        {\n          time: string,\n          tempC: string,\n          tempF: string,\n          windspeedMiles: string,\n          windspeedKmph: string,\n          winddirDegree: string,\n          winddir16Point: string,\n          weatherCode: string,\n          weatherIconUrl: {\n            value: string\n          }[],\n          weatherDesc: {\n            value: string\n          }[],\n          precipMM: string,\n          humidity: string,\n          visibility: string,\n          pressure: string,\n          cloudcover: string,\n          HeatIndexC: string,\n          HeatIndexF: string,\n          DewPointC: string,\n          DewPointF: string,\n          WindChillC: string,\n          WindChillF: string,\n          WindGustMiles: string,\n          WindGustKmph: string,\n          FeelsLikeC: string,\n          FeelsLikeF: string,\n          chanceofrain: string,\n          chanceofremdry: string,\n          chanceofwindy: string,\n          chanceofovercast: string,\n          chanceofsunshine: string,\n          chanceoffrost: string,\n          chanceofhightemp: string,\n          chanceoffog: string,\n          chanceofsnow: string,\n          chanceofthunder: string\n        }[]\n      }[],\n    public ClimateAverages?:\n      {\n        month:\n        {\n          index: string,\n          name: string,\n          avgMinTemp: string,\n          avgMinTemp_F: string,\n          absMaxTemp: string,\n          absMaxTemp_F: string,\n          avgDailyRainfall: string,\n        }[]\n      }[]\n  ) { }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCityFromIp\n                            \n                            \n                                getIp\n                            \n                            \n                                getWeatherInCity\n                            \n                            \n                                testDataForDev\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, helperService: HelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        helperService\n                                                  \n                                                        \n                                                                    HelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCityFromIp\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCityFromIp(ip: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/weather.service.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ip\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getIp\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetIp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/weather.service.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWeatherInCity\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWeatherInCity(filterObject: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/weather.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterObject\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            testDataForDev\n                            \n                            \n                        \n                    \n                \n                \n                    \ntestDataForDev(object: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/weather.service.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        object\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { HelperService } from \"./helper.service\";\nimport { of } from \"rxjs\";\nimport { testData } from \"./test-data\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class WeatherService {\n\n  constructor(private httpClient: HttpClient, private helperService: HelperService) { }\n\n  getWeatherInCity(filterObject) {\n    const queries = this.helperService.mapObjectToQueryParams(filterObject);\n    // return this.testDataForDev(filterObject);\n    return this.httpClient.get(\"http://api.worldweatheronline.com/premium/v1/weather.ashx?key=2e9f306c80f949aa969150517182510&\" + queries);\n  }\n\n  getCityFromIp(ip) {\n    return this.httpClient.get(\"http://www.geoplugin.net/json.gp?ip=\" + ip);\n  }\n\n  getIp() {\n    return this.httpClient.get(\"https://api.ipify.org?format=json\");\n  }\n\n\n  testDataForDev(object) {\n    return of(testData);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherWidgetComponent.html":{"url":"components/WeatherWidgetComponent.html","title":"component - WeatherWidgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherWidgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/weather-widget/weather-widget.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-widget\n            \n\n            \n                styleUrls\n                weather-widget.component.css\n            \n\n\n\n            \n                templateUrl\n                ./weather-widget.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                climateDayConditions\n                            \n                            \n                                climateNightConditions\n                            \n                            \n                                ready\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dayLight\n                            \n                            \n                                humidity\n                            \n                            \n                                maxtempC\n                            \n                            \n                                mintempC\n                            \n                            \n                                pressure\n                            \n                            \n                                temp_C\n                            \n                            \n                                weatherDesc\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/weather-widget/weather-widget.component.ts:34\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dayLight\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        humidity\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxtempC\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mintempC\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressure\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        temp_C\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        weatherDesc\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climateDayConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateDayConditions:     \n\n                    \n                \n                    \n                        \n                            Default value : climateDayCondition\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climateNightConditions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateNightConditions:     \n\n                    \n                \n                    \n                        \n                            Default value : climateNightCondition\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/weather-widget/weather-widget.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from \"@angular/core\";\nimport { climateDayCondition, climateNightCondition } from \"src/app/models/climate\";\n\n@Component({\n  selector: \"app-weather-widget\",\n  templateUrl: \"./weather-widget.component.html\",\n  styleUrls: [\"./weather-widget.component.css\"]\n})\nexport class WeatherWidgetComponent implements OnInit {\n  climateDayConditions = climateDayCondition;\n  climateNightConditions = climateNightCondition;\n\n  @Input()\n  weatherDesc: string = null;\n\n  @Input()\n  dayLight: boolean;\n\n  @Input()\n  humidity: number;\n\n  @Input()\n  pressure: number;\n\n  @Input()\n  temp_C: number;\n\n  @Input()\n  mintempC: number;\n\n  @Input()\n  maxtempC: number;\n\n  ready = false;\n  constructor() { }\n\n\n  ngOnInit() {\n    this.ready = true;\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      {{temp_C}}°C\n      Min:{{mintempC}}° , Max:{{maxtempC}}°\n    \n    \n      \n        {{weatherDesc}}\n      \n    \n    \n      \n         Humidity: {{humidity}}%\n      \n    \n    \n      \n         Pressure: {{pressure}}\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{temp_C}}°C      Min:{{mintempC}}° , Max:{{maxtempC}}°                      {{weatherDesc}}                             Humidity: {{humidity}}%                             Pressure: {{pressure}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CityComponent', 'selector': 'app-city'},{'name': 'CityDashboardWidgetComponent', 'selector': 'app-city-dashboard-widget'},{'name': 'CountryComponent', 'selector': 'app-country'},{'name': 'MinMaxWeatherWidgetComponent', 'selector': 'app-min-max-weather-widget'},{'name': 'VisualizeD3WeatherComponent', 'selector': 'app-visualize-d3-weather'},{'name': 'WeatherWidgetComponent', 'selector': 'app-weather-widget'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherWidgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.routing.ts\n            \n            \n                variable\n            \n            \n                routing\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/city-dashboard-widget/city-dashboard-widget.component.ts\n            \n            \n                component\n            \n            \n                CityDashboardWidgetComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/city/city.component.ts\n            \n            \n                component\n            \n            \n                CityComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/country/country.component.ts\n            \n            \n                component\n            \n            \n                CountryComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/min-max-weather-widget/min-max-weather-widget.component.ts\n            \n            \n                component\n            \n            \n                MinMaxWeatherWidgetComponent\n            \n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/visualize-d3-weather/visualize-d3-weather.component.ts\n            \n            \n                component\n            \n            \n                VisualizeD3WeatherComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/weather-widget/weather-widget.component.ts\n            \n            \n                component\n            \n            \n                WeatherWidgetComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/models/climate.ts\n            \n            \n                class\n            \n            \n                Climate\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/climate.ts\n            \n            \n                class\n            \n            \n                WeatherInterface\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/climate.ts\n            \n            \n                variable\n            \n            \n                climateDayCondition\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/climate.ts\n            \n            \n                variable\n            \n            \n                climateNightCondition\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/helper.service.ts\n            \n            \n                injectable\n            \n            \n                HelperService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/test-data.ts\n            \n            \n                variable\n            \n            \n                testData\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/assets/countries.ts\n            \n            \n                variable\n            \n            \n                countries\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.10\n        \n            @angular/cdk : ^7.0.1\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/flex-layout : ^6.0.0-beta.18\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^7.0.1\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            core-js : ^2.5.4\n        \n            d3 : ^5.7.0\n        \n            ngx-auto-unsubscribe : ^2.4.1\n        \n            ngx-loading : ^3.0.1\n        \n            ngx-ui-loader : ^2.0.0\n        \n            rxjs : ~6.2.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeatherApp\nThis project was generated with Angular CLI version 6.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nAppModule -->\n\nCityComponent->AppModule\n\n\n\n\n\nCityDashboardWidgetComponent\n\nCityDashboardWidgetComponent\n\nAppModule -->\n\nCityDashboardWidgetComponent->AppModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nAppModule -->\n\nCountryComponent->AppModule\n\n\n\n\n\nMinMaxWeatherWidgetComponent\n\nMinMaxWeatherWidgetComponent\n\nAppModule -->\n\nMinMaxWeatherWidgetComponent->AppModule\n\n\n\n\n\nVisualizeD3WeatherComponent\n\nVisualizeD3WeatherComponent\n\nAppModule -->\n\nVisualizeD3WeatherComponent->AppModule\n\n\n\n\n\nWeatherWidgetComponent\n\nWeatherWidgetComponent\n\nAppModule -->\n\nWeatherWidgetComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nHelperService\n\nHelperService\n\nAppModule -->\n\nHelperService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            climateDayCondition   (src/.../climate.ts)\n                        \n                        \n                            climateNightCondition   (src/.../climate.ts)\n                        \n                        \n                            countries   (src/.../countries.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            routing   (src/.../app.routing.ts)\n                        \n                        \n                            testData   (src/.../test-data.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/climate.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            climateDayCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateDayCondition:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  \"Sunny\": \"wi-day-sunny\",\n  \"Partly cloudy\": \"wi-day-cloudy\",\n  \"Cloudy\": \"wi-cloudy\",\n  \"Overcast\": \"wi-day-sunny-overcast\",\n  \"Mist\": \"wi-fog\",\n  \"Patchy rain possible\": \"wi-day-rain\",\n  \"Patchy snow possible\": \"wi-snow\",\n  \"Patchy sleet possible\": \"wi-sleet\",\n  \"Patchy freezing drizzle possible\": \"wi-snowflake-cold\",\n  \"Thundery outbreaks possible\": \"wi-thunderstorm\",\n  \"Blowing snow\": \"wi-snow-wind\",\n  \"Blizzard\": \"wi-day-snow-thunderstorm\",\n  \"Fog\": \"wi-day-fog\",\n  \"Freezing fog\": \"wi-day-fog\",\n  \"Patchy light drizzle\": \"wi-day-cloudy-windy\",\n  \"Light drizzle\": \"wi-day-cloudy-windy\",\n  \"Freezing drizzle\": \"wi-day-cloudy-windy\",\n  \"Heavy freezing drizzle\": \"wi-day-cloudy-windy\",\n  \"Patchy light rain\": \"wi-day-rain\",\n  \"Light rain\": \"wi-day-rain\",\n  \"Moderate rain at times\": \"wi-day-rain-mix\",\n  \"Moderate rain\": \"wi-day-rain-mix\",\n  \"Heavy rain at times\": \"wi-day-hail\",\n  \"Heavy rain\": \"wi-day-hail\",\n  \"Light freezing rain\": \"wi-day-sleet\"\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climateNightCondition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        climateNightCondition:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  \"Clear\": \"wi-moon-alt-waning-crescent-6\",\n  \"Partly cloudy\": \"wi-night-cloudy\",\n  \"Cloudy\": \"wi-cloudy\",\n  \"Overcast\": \"wi-night-sunny-overcast\",\n  \"Mist\": \"wi-fog\",\n  \"Patchy rain possible\": \"wi-night-rain\",\n  \"Patchy snow possible\": \"wi-snow\",\n  \"Patchy sleet possible\": \"wi-sleet\",\n  \"Patchy freezing drizzle possible\": \"wi-snowflake-cold\",\n  \"Thundery outbreaks possible\": \"wi-thunderstorm\",\n  \"Blowing snow\": \"wi-snow-wind\",\n  \"Blizzard\": \"wi-night-snow-thunderstorm\",\n  \"Fog\": \"wi-night-fog\",\n  \"Freezing fog\": \"wi-night-fog\",\n  \"Patchy light drizzle\": \"wi-night-cloudy-windy\",\n  \"Light drizzle\": \"wi-night-cloudy-windy\",\n  \"Freezing drizzle\": \"wi-night-cloudy-windy\",\n  \"Heavy freezing drizzle\": \"wi-night-cloudy-windy\",\n  \"Patchy light rain\": \"wi-night-rain\",\n  \"Light rain\": \"wi-night-rain\",\n  \"Moderate rain at times\": \"wi-night-rain-mix\",\n  \"Moderate rain\": \"wi-night-rain-mix\",\n  \"Heavy rain at times\": \"wi-night-hail\",\n  \"Heavy rain\": \"wi-night-hail\",\n  \"Light freezing rain\": \"wi-night-sleet\"\n}\n                        \n                    \n\n\n            \n        \n\n    src/assets/countries.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            countries\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        countries:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{\n  Egypt: [\n    \"Alexandria\",\n    \"Aswan\",\n    \"Asyut\",\n    \"Beheira\",\n    \"Beni Suef\",\n    \"Cairo\",\n    \"Dakahlia\",\n    \"Damietta\",\n    \"Faiyum\",\n    \"Gharbia\",\n    \"Giza\",\n    \"Ismailia\",\n    \"Kafr El Sheikh\",\n    \"Luxor\",\n    \"Matruh\",\n    \"Minya\",\n    \"Monufia\",\n    \"Al Wadi Al Gaded\",\n    \"North Sinai\",\n    \"Port Said\",\n    \"Qalyubia\",\n    \"Qena\",\n    \"Red Sea\",\n    \"Sharqia\",\n    \"Sohag\",\n    \"South Sinai\",\n    \"Suez\"\n  ]\n}]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.routing.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routing\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        routing:     ModuleWithProviders\n\n                    \n                \n                    \n                        \n                            Type :     ModuleWithProviders\n\n                        \n                    \n                    \n                        \n                            Default value : RouterModule.forRoot(appRoutes, {\n  useHash: true\n})\n                        \n                    \n\n\n            \n        \n\n    src/app/services/test-data.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            testData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        testData:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  \"data\": {\n    \"request\": [\n      {\n        \"type\": \"LatLon\",\n        \"query\": \"Lat 30.02 and Lon 31.20\"\n      }\n    ],\n      \"current_condition\": [\n        {\n          \"observation_time\": \"03:30 PM\",\n          \"temp_C\": \"25\",\n          \"temp_F\": \"77\",\n          \"localObsDateTime\": \"2018-10-28 12:44 AM\",\n          \"isdaytime\": \"no\",\n          \"weatherCode\": \"113\",\n          \"weatherIconUrl\": [\n            {\n              \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\"\n            }\n          ],\n          \"weatherDesc\": [\n            {\n              \"value\": \"Clear\"\n            }\n          ],\n          \"windspeedMiles\": \"12\",\n          \"windspeedKmph\": \"19\",\n          \"winddirDegree\": \"20\",\n          \"winddir16Point\": \"NNE\",\n          \"precipMM\": \"0.0\",\n          \"humidity\": \"39\",\n          \"visibility\": \"10\",\n          \"pressure\": \"1020\",\n          \"cloudcover\": \"0\",\n          \"FeelsLikeC\": \"25\",\n          \"FeelsLikeF\": \"78\"\n        }\n      ],\n        \"weather\": [\n          {\n            \"date\": \"2018-10-27\",\n            \"astronomy\": [\n              {\n                \"sunrise\": \"06:05 AM\",\n                \"sunset\": \"05:13 PM\",\n                \"moonrise\": \"07:34 PM\",\n                \"moonset\": \"08:34 AM\",\n                \"moon_phase\": \"Waning Gibbous\",\n                \"moon_illumination\": \"90\"\n              }\n            ],\n            \"maxtempC\": \"27\",\n            \"maxtempF\": \"81\",\n            \"mintempC\": \"19\",\n            \"mintempF\": \"66\",\n            \"totalSnow_cm\": \"0.0\",\n            \"sunHour\": \"8.7\",\n            \"uvIndex\": \"5\",\n            \"hourly\": [\n              {\n                \"time\": \"0\",\n                \"tempC\": \"21\",\n                \"tempF\": \"69\",\n                \"windspeedMiles\": \"9\",\n                \"windspeedKmph\": \"14\",\n                \"winddirDegree\": \"239\",\n                \"winddir16Point\": \"WSW\",\n                \"weatherCode\": \"113\",\n                \"weatherIconUrl\": [\n                  {\n                    \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\"\n                  }\n                ],\n                \"weatherDesc\": [\n                  {\n                    \"value\": \"Clear\"\n                  }\n                ],\n                \"precipMM\": \"0.0\",\n                \"humidity\": \"51\",\n                \"visibility\": \"10\",\n                \"pressure\": \"1021\",\n                \"cloudcover\": \"0\",\n                \"HeatIndexC\": \"21\",\n                \"HeatIndexF\": \"69\",\n                \"DewPointC\": \"10\",\n                \"DewPointF\": \"50\",\n                \"WindChillC\": \"21\",\n                \"WindChillF\": \"69\",\n                \"WindGustMiles\": \"10\",\n                \"WindGustKmph\": \"16\",\n                \"FeelsLikeC\": \"21\",\n                \"FeelsLikeF\": \"69\",\n                \"chanceofrain\": \"0\",\n                \"chanceofremdry\": \"81\",\n                \"chanceofwindy\": \"0\",\n                \"chanceofovercast\": \"0\",\n                \"chanceofsunshine\": \"89\",\n                \"chanceoffrost\": \"0\",\n                \"chanceofhightemp\": \"0\",\n                \"chanceoffog\": \"0\",\n                \"chanceofsnow\": \"0\",\n                \"chanceofthunder\": \"0\"\n              },\n              {\n                \"time\": \"300\",\n                \"tempC\": \"21\",\n                \"tempF\": \"69\",\n                \"windspeedMiles\": \"7\",\n                \"windspeedKmph\": \"11\",\n                \"winddirDegree\": \"5\",\n                \"winddir16Point\": \"N\",\n                \"weatherCode\": \"113\",\n                \"weatherIconUrl\": [\n                  {\n                    \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\"\n                  }\n                ],\n                \"weatherDesc\": [\n                  {\n                    \"value\": \"Clear\"\n                  }\n                ],\n                \"precipMM\": \"0.0\",\n                \"humidity\": \"56\",\n                \"visibility\": \"13\",\n                \"pressure\": \"1021\",\n                \"cloudcover\": \"0\",\n                \"HeatIndexC\": \"21\",\n                \"HeatIndexF\": \"69\",\n                \"DewPointC\": \"12\",\n                \"DewPointF\": \"53\",\n                \"WindChillC\": \"21\",\n                \"WindChillF\": \"69\",\n                \"WindGustMiles\": \"8\",\n                \"WindGustKmph\": \"13\",\n                \"FeelsLikeC\": \"21\",\n                \"FeelsLikeF\": \"69\",\n                \"chanceofrain\": \"0\",\n                \"chanceofremdry\": \"84\",\n                \"chanceofwindy\": \"0\",\n                \"chanceofovercast\": \"0\",\n                \"chanceofsunshine\": \"90\",\n                \"chanceoffrost\": \"0\",\n                \"chanceofhightemp\": \"0\",\n                \"chanceoffog\": \"0\",\n                \"chanceofsnow\": \"0\",\n                \"chanceofthunder\": \"0\"\n              },\n              {\n                \"time\": \"600\",\n                \"tempC\": \"21\",\n                \"tempF\": \"69\",\n                \"windspeedMiles\": \"6\",\n                \"windspeedKmph\": \"10\",\n                \"winddirDegree\": \"13\",\n                \"winddir16Point\": \"NNE\",\n                \"weatherCode\": \"113\",\n                \"weatherIconUrl\": [\n                  {\n                    \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\"\n                  }\n                ],\n                \"weatherDesc\": [\n                  {\n                    \"value\": \"Clear\"\n                  }\n                ],\n                \"precipMM\": \"0.0\",\n                \"humidity\": \"57\",\n                \"visibility\": \"20\",\n                \"pressure\": \"1021\",\n                \"cloudcover\": \"0\",\n                \"HeatIndexC\": \"22\",\n                \"HeatIndexF\": \"71\",\n                \"DewPointC\": \"12\",\n                \"DewPointF\": \"54\",\n                \"WindChillC\": \"21\",\n                \"WindChillF\": \"69\",\n                \"WindGustMiles\": \"7\",\n                \"WindGustKmph\": \"11\",\n                \"FeelsLikeC\": \"21\",\n                \"FeelsLikeF\": \"69\",\n                \"chanceofrain\": \"0\",\n                \"chanceofremdry\": \"87\",\n                \"chanceofwindy\": \"0\",\n                \"chanceofovercast\": \"0\",\n                \"chanceofsunshine\": \"90\",\n                \"chanceoffrost\": \"0\",\n                \"chanceofhightemp\": \"0\",\n                \"chanceoffog\": \"0\",\n                \"chanceofsnow\": \"0\",\n                \"chanceofthunder\": \"0\"\n              },\n              {\n                \"time\": \"900\",\n                \"tempC\": \"23\",\n                \"tempF\": \"73\",\n                \"windspeedMiles\": \"7\",\n                \"windspeedKmph\": \"12\",\n                \"winddirDegree\": \"23\",\n                \"winddir16Point\": \"NNE\",\n                \"weatherCode\": \"113\",\n                \"weatherIconUrl\": [\n                  {\n                    \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0001_sunny.png\"\n                  }\n                ],\n                \"weatherDesc\": [\n                  {\n                    \"value\": \"Sunny\"\n                  }\n                ],\n                \"precipMM\": \"0.0\",\n                \"humidity\": \"49\",\n                \"visibility\": \"20\",\n                \"pressure\": \"1022\",\n                \"cloudcover\": \"0\",\n                \"HeatIndexC\": \"25\",\n                \"HeatIndexF\": \"76\",\n                \"DewPointC\": \"11\",\n                \"DewPointF\": \"52\",\n                \"WindChillC\": \"23\",\n                \"WindChillF\": \"73\",\n                \"WindGustMiles\": \"9\",\n                \"WindGustKmph\": \"14\",\n                \"FeelsLikeC\": \"25\",\n                \"FeelsLikeF\": \"76\",\n                \"chanceofrain\": \"0\",\n                \"chanceofremdry\": \"92\",\n                \"chanceofwindy\": \"0\",\n                \"chanceofovercast\": \"0\",\n                \"chanceofsunshine\": \"88\",\n                \"chanceoffrost\": \"0\",\n                \"chanceofhightemp\": \"5\",\n                \"chanceoffog\": \"0\",\n                \"chanceofsnow\": \"0\",\n                \"chanceofthunder\": \"0\"\n              },\n              {\n                \"time\": \"1200\",\n                \"tempC\": \"25\",\n                \"tempF\": \"77\",\n                \"windspeedMiles\": \"10\",\n                \"windspeedKmph\": \"17\",\n                \"winddirDegree\": \"36\",\n                \"winddir16Point\": \"NE\",\n                \"weatherCode\": \"113\",\n                \"weatherIconUrl\": [\n                  {\n                    \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0001_sunny.png\"\n                  }\n                ],\n                \"weatherDesc\": [\n                  {\n                    \"value\": \"Sunny\"\n                  }\n                ],\n                \"precipMM\": \"0.0\",\n                \"humidity\": \"34\",\n                \"visibility\": \"20\",\n                \"pressure\": \"1022\",\n                \"cloudcover\": \"0\",\n                \"HeatIndexC\": \"25\",\n                \"HeatIndexF\": \"77\",\n                \"DewPointC\": \"8\",\n                \"DewPointF\": \"47\",\n                \"WindChillC\": \"25\",\n                \"WindChillF\": \"77\",\n                \"WindGustMiles\": \"12\",\n                \"WindGustKmph\": \"19\",\n                \"FeelsLikeC\": \"25\",\n                \"FeelsLikeF\": \"77\",\n                \"chanceofrain\": \"0\",\n                \"chanceofremdry\": \"89\",\n                \"chanceofwindy\": \"0\",\n                \"chanceofovercast\": \"0\",\n                \"chanceofsunshine\": \"88\",\n                \"chanceoffrost\": \"0\",\n                \"chanceofhightemp\": \"43\",\n                \"chanceoffog\": \"0\",\n                \"chanceofsnow\": \"0\",\n                \"chanceofthunder\": \"0\"\n              },\n              {\n                \"time\": \"1500\",\n                \"tempC\": \"27\",\n                \"tempF\": \"80\",\n                \"windspeedMiles\": \"11\",\n                \"windspeedKmph\": \"18\",\n                \"winddirDegree\": \"38\",\n                \"winddir16Point\": \"NE\",\n                \"weatherCode\": \"113\",\n                \"weatherIconUrl\": [\n                  {\n                    \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0001_sunny.png\"\n                  }\n                ],\n                \"weatherDesc\": [\n                  {\n                    \"value\": \"Sunny\"\n                  }\n                ],\n                \"precipMM\": \"0.0\",\n                \"humidity\": \"28\",\n                \"visibility\": \"20\",\n                \"pressure\": \"1020\",\n                \"cloudcover\": \"0\",\n                \"HeatIndexC\": \"26\",\n                \"HeatIndexF\": \"79\",\n                \"DewPointC\": \"7\",\n                \"DewPointF\": \"44\",\n                \"WindChillC\": \"27\",\n                \"WindChillF\": \"80\",\n                \"WindGustMiles\": \"13\",\n                \"WindGustKmph\": \"21\",\n                \"FeelsLikeC\": \"26\",\n                \"FeelsLikeF\": \"79\",\n                \"chanceofrain\": \"0\",\n                \"chanceofremdry\": \"83\",\n                \"chanceofwindy\": \"0\",\n                \"chanceofovercast\": \"0\",\n                \"chanceofsunshine\": \"89\",\n                \"chanceoffrost\": \"0\",\n                \"chanceofhightemp\": \"98\",\n                \"chanceoffog\": \"0\",\n                \"chanceofsnow\": \"0\",\n                \"chanceofthunder\": \"0\"\n              },\n              {\n                \"time\": \"1800\",\n                \"tempC\": \"25\",\n                \"tempF\": \"78\",\n                \"windspeedMiles\": \"13\",\n                \"windspeedKmph\": \"21\",\n                \"winddirDegree\": \"47\",\n                \"winddir16Point\": \"NE\",\n                \"weatherCode\": \"113\",\n                \"weatherIconUrl\": [\n                  {\n                    \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\"\n                  }\n                ],\n                \"weatherDesc\": [\n                  {\n                    \"value\": \"Clear\"\n                  }\n                ],\n                \"precipMM\": \"0.0\",\n                \"humidity\": \"33\",\n                \"visibility\": \"20\",\n                \"pressure\": \"1020\",\n                \"cloudcover\": \"0\",\n                \"HeatIndexC\": \"25\",\n                \"HeatIndexF\": \"78\",\n                \"DewPointC\": \"8\",\n                \"DewPointF\": \"46\",\n                \"WindChillC\": \"25\",\n                \"WindChillF\": \"78\",\n                \"WindGustMiles\": \"17\",\n                \"WindGustKmph\": \"27\",\n                \"FeelsLikeC\": \"25\",\n                \"FeelsLikeF\": \"78\",\n                \"chanceofrain\": \"0\",\n                \"chanceofremdry\": \"85\",\n                \"chanceofwindy\": \"0\",\n                \"chanceofovercast\": \"0\",\n                \"chanceofsunshine\": \"88\",\n                \"chanceoffrost\": \"0\",\n                \"chanceofhightemp\": \"65\",\n                \"chanceoffog\": \"0\",\n                \"chanceofsnow\": \"0\",\n                \"chanceofthunder\": \"0\"\n              },\n              {\n                \"time\": \"2100\",\n                \"tempC\": \"22\",\n                \"tempF\": \"71\",\n                \"windspeedMiles\": \"16\",\n                \"windspeedKmph\": \"26\",\n                \"winddirDegree\": \"50\",\n                \"winddir16Point\": \"NE\",\n                \"weatherCode\": \"113\",\n                \"weatherIconUrl\": [\n                  {\n                    \"value\": \"http://cdn.worldweatheronline.net/images/wsymbols01_png_64/wsymbol_0008_clear_sky_night.png\"\n                  }\n                ],\n                \"weatherDesc\": [\n                  {\n                    \"value\": \"Clear\"\n                  }\n                ],\n                \"precipMM\": \"0.0\",\n                \"humidity\": \"47\",\n                \"visibility\": \"20\",\n                \"pressure\": \"1021\",\n                \"cloudcover\": \"0\",\n                \"HeatIndexC\": \"23\",\n                \"HeatIndexF\": \"74\",\n                \"DewPointC\": \"10\",\n                \"DewPointF\": \"50\",\n                \"WindChillC\": \"22\",\n                \"WindChillF\": \"71\",\n                \"WindGustMiles\": \"22\",\n                \"WindGustKmph\": \"36\",\n                \"FeelsLikeC\": \"22\",\n                \"FeelsLikeF\": \"71\",\n                \"chanceofrain\": \"0\",\n                \"chanceofremdry\": \"82\",\n                \"chanceofwindy\": \"0\",\n                \"chanceofovercast\": \"0\",\n                \"chanceofsunshine\": \"88\",\n                \"chanceoffrost\": \"0\",\n                \"chanceofhightemp\": \"0\",\n                \"chanceoffog\": \"0\",\n                \"chanceofsnow\": \"0\",\n                \"chanceofthunder\": \"0\"\n              }\n            ]\n          }\n        ],\n          \"ClimateAverages\": [\n            {\n              \"month\": [\n                {\n                  \"index\": \"1\",\n                  \"name\": \"January\",\n                  \"avgMinTemp\": \"11.4\",\n                  \"avgMinTemp_F\": \"52.5\",\n                  \"absMaxTemp\": \"23.4\",\n                  \"absMaxTemp_F\": \"74.1\",\n                  \"avgDailyRainfall\": \"0.40\"\n                },\n                {\n                  \"index\": \"2\",\n                  \"name\": \"February\",\n                  \"avgMinTemp\": \"13.6\",\n                  \"avgMinTemp_F\": \"56.5\",\n                  \"absMaxTemp\": \"26.1\",\n                  \"absMaxTemp_F\": \"79.0\",\n                  \"avgDailyRainfall\": \"0.21\"\n                },\n                {\n                  \"index\": \"3\",\n                  \"name\": \"March\",\n                  \"avgMinTemp\": \"16.4\",\n                  \"avgMinTemp_F\": \"61.5\",\n                  \"absMaxTemp\": \"29.7\",\n                  \"absMaxTemp_F\": \"85.5\",\n                  \"avgDailyRainfall\": \"0.10\"\n                },\n                {\n                  \"index\": \"4\",\n                  \"name\": \"April\",\n                  \"avgMinTemp\": \"20.3\",\n                  \"avgMinTemp_F\": \"68.5\",\n                  \"absMaxTemp\": \"35.2\",\n                  \"absMaxTemp_F\": \"95.4\",\n                  \"avgDailyRainfall\": \"0.12\"\n                },\n                {\n                  \"index\": \"5\",\n                  \"name\": \"May\",\n                  \"avgMinTemp\": \"24.5\",\n                  \"avgMinTemp_F\": \"76.1\",\n                  \"absMaxTemp\": \"37.4\",\n                  \"absMaxTemp_F\": \"99.3\",\n                  \"avgDailyRainfall\": \"0.07\"\n                },\n                {\n                  \"index\": \"6\",\n                  \"name\": \"June\",\n                  \"avgMinTemp\": \"27.3\",\n                  \"avgMinTemp_F\": \"81.1\",\n                  \"absMaxTemp\": \"41.1\",\n                  \"absMaxTemp_F\": \"106.0\",\n                  \"avgDailyRainfall\": \"0.00\"\n                },\n                {\n                  \"index\": \"7\",\n                  \"name\": \"July\",\n                  \"avgMinTemp\": \"28.2\",\n                  \"avgMinTemp_F\": \"82.8\",\n                  \"absMaxTemp\": \"41.8\",\n                  \"absMaxTemp_F\": \"107.2\",\n                  \"avgDailyRainfall\": \"0.00\"\n                },\n                {\n                  \"index\": \"8\",\n                  \"name\": \"August\",\n                  \"avgMinTemp\": \"28.8\",\n                  \"avgMinTemp_F\": \"83.8\",\n                  \"absMaxTemp\": \"42\",\n                  \"absMaxTemp_F\": \"107.6\",\n                  \"avgDailyRainfall\": \"0.00\"\n                },\n                {\n                  \"index\": \"9\",\n                  \"name\": \"September\",\n                  \"avgMinTemp\": \"26.5\",\n                  \"avgMinTemp_F\": \"79.7\",\n                  \"absMaxTemp\": \"39.6\",\n                  \"absMaxTemp_F\": \"103.3\",\n                  \"avgDailyRainfall\": \"0.00\"\n                },\n                {\n                  \"index\": \"10\",\n                  \"name\": \"October\",\n                  \"avgMinTemp\": \"23.2\",\n                  \"avgMinTemp_F\": \"73.8\",\n                  \"absMaxTemp\": \"34.7\",\n                  \"absMaxTemp_F\": \"94.5\",\n                  \"avgDailyRainfall\": \"0.02\"\n                },\n                {\n                  \"index\": \"11\",\n                  \"name\": \"November\",\n                  \"avgMinTemp\": \"18.3\",\n                  \"avgMinTemp_F\": \"64.9\",\n                  \"absMaxTemp\": \"30.8\",\n                  \"absMaxTemp_F\": \"87.4\",\n                  \"avgDailyRainfall\": \"0.11\"\n                },\n                {\n                  \"index\": \"12\",\n                  \"name\": \"December\",\n                  \"avgMinTemp\": \"13.3\",\n                  \"avgMinTemp_F\": \"55.9\",\n                  \"absMaxTemp\": \"25.3\",\n                  \"absMaxTemp_F\": \"77.5\",\n                  \"avgDailyRainfall\": \"0.18\"\n                }\n              ]\n            }\n          ]\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
